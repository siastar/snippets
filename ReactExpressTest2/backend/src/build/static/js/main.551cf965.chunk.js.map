{"version":3,"sources":["AuthContext.js","components/Login.js","components/Header.js","components/Footer.js","components/menu/Sidebar.js","components/Main.js","components/commons/MessageAlert.js","components/menu/MenuEditor.js","components/grid/ColumnVisibility.js","components/menu/MenuDetail.js","components/sideservices/SServiceEditor.js","components/commons/Confirmation.js","components/sideservices/SServiceDetails.js","components/commons/IconsSelector.js","components/commons/PG7Translator.js","components/maintenance/MaintenanceServices.js","components/sideservices/CatDetails.js","components/sideservices/CatEditor.js","components/chat/Chat.js","components/commons/NotFound.js","components/commons/StatusComputer.js","components/rentalservices/RentalRequests.js","components/rentalservices/AutosView.js","components/rentalservices/CommonView.js","components/rentalservices/RentalEditor.js","PrivateRoute.js","components/content/ContentModal.js","components/content/ContentEditor.js","routes.js","fontawesome.js","App.js","serviceWorker.js","index.js"],"names":["AuthContext","React","createContext","AuthProvider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_setLang","lang","setState","_globalLang","_setAuth","auth","_isAuth","state","react_default","a","createElement","Provider","value","children","Component","AuthConsumer","Consumer","Login","onUsernameChange","e","username","target","onPasswordChange","password","logIn","validator","allValid","context","history","push","IsloggedIn","showMessages","forceUpdate","preventDefault","isAuth","SimpleReactValidator","className","type","name","placeholder","onChange","message","maxLength","onClick","href","contextType","Header","logout","console","log","setAuth","id","autofocus","autocomplete","data-toggle","src","alt","Footer","class","Date","getFullYear","Sidebar","switchLang","getMenuItems","asyncToGenerator","regenerator_default","mark","_callee","res","menuItems","wrap","_context","prev","next","axios","get","sent","_","sortBy","data","stop","language","_this2","xmlns","preserveAspectRatio","width","height","viewBox","fill","fill-rule","d","data-target","aria-expanded","aria-controls","data-parent","map","items","lib","to","url","index_es","icon","title_lang","title","Main","Fragment","Header_Header","Sidebar_Sidebar","Footer_Footer","isPrivate","MessageAlert","status","role","successMessage","errorMessage","MenuEditor","currentTarget","active","sortid","getItem","_ref","isEmpty","_id","_innerId","sortId","_x","apply","arguments","onFormSubmit","_set","langPrefix","where","ObjectID","title_lang._id","set","defineProperty","post","then","setTimeout","catch","err","undefined","match","params","Main_Main","for","disabled","autoComplete","commons_MessageAlert","ColumnVisibility","columns","setColumnVisibility","index","visible","defaultChecked","MenuDetail","onCloseModal","openModal","deleteRecordId","openModalConfirmation","handleEditRow","pathname","getColumns","key","getRowMetaData","row","formatter","dependentValues","rows","toString","toConsumableArray","toggleValue","_React$createElement","filter","column","grid_ColumnVisibility","react_data_grid_default","enableSingleRowSelect","enableCellSelect","rowGetter","i","rowsCount","length","SServiceEditor","provider","slug","imageurl","desc_lang","categoryId","getCategory","catItems","_ref2","cat_lang","category","concat","_ref3","_callee2","pid","cid","sItems","_context2","_ref4","provider_name","providers","_x2","providers._id","providers.$.provider_name","providers.$.url","providers.$.imageurl","_ref5","Confirmation","handleDeleteRow","lib_index_es","open","onClose","center","data-dismiss","SServices","parentId","parentid","slice","_this$state","commons_Confirmation","languageObj","login","en","userName","it","menu","pageTitle","services","servicesCategories","servicesRequests","serviceName","option","pickUpDate","returnDate","updatedDate","maintenance","PG7Translator","translationOptions","paramsCheck","selectedLang","section","getTranslated","passedCheck","requestedSection","requestedTranslation","translated","buildTranslation","translLang","translation","translProp","MServices","Requests","thisRequestIndex","thisRequest","userID","subject","description","imagePath","createdDate","availibilityDate","updateDate","damagedGood","CatDetails","CatEditor","skey","cat_lang._id","Chat","goFull","isFull","dist_default","enabled","index_min_default","display","position","allowFullScreen","notFound","serviceRequestCodes","rental","code","side","statusIcons","NRE","WPR","WCR","APR","ACR","RPR","RCR","EPA","CPA","PPA","VPA","CLR","statusCodes","new","waitingProvider","communication","autos","body","waitingCustomer","acceptedProvider","acceptedCustomer","refusedProvider","refusedCustomer","refusedPayment","errorPayment","payedBySystem","preOrdered","verifiedPayment","closed","statusGetter","init","getStatus","statusCode","service","getServiceFromCode","getStatusFromCode","fieldID","substring","serviceCode","serviceObj","trim","toUpperCase","statusObj","RentalRequests","getLang","reqid","localStorage","removeItem","setItem","JSON","stringify","getStatusIcon","thisStatus","statusStep","statusIcon","iconData","printStatusIconEl","iconArgs","resizeableColumns","resizable","sortable","sortRows","initialRows","sortColumn","sortDirection","sort","b","sortDescendingFirst","c","objectSpread","getRentalData","rentalData","keys","Autos","userinfo","Size","Status","DataOraRitiro","DataOraRiconsegna","PostoRitiro","PostoRiconsegna","UpdatedDate","Username","size","pickUpPlace","returnPlace","moment","format","NumeroCapi","totalPieces","onGridSort","AutoView","setStatus","item","isObject","handleSubmit","messageStatus","defaultValue","build_default","data-enable-time","options","dateFormat","time_24hr","minDate","CommonView","_this$props$rentalDat","update","RentalEditor","parse","AutosView_AutoView","CommonView_CommonView","PrivateRoute","component","rest","objectWithoutProperties","Route","assign","render","Redirect","ContentModal","rowData","_useState","useState","_useState2","slicedToArray","titleState","setTitleState","_useState3","EditorState","createEmpty","_useState4","editorState","setEditorState","_useState5","_useState6","editorIntialized","setEditorInitialized","useEffect","content","blocksFromHtml","htmlToDraft","contentBlocks","entityMap","contentState","ContentState","createFromBlockArray","createWithContent","react_draft_wysiwyg","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","maxHeight","draftToHtml","convertToRaw","getCurrentContent","onSubmitHandler","ContentEditor","getData","ln","ids","_data$i$keys$i","forEach","outerIndex","openContentModal","aria-selected","aria-labelledby","content_ContentModal","Routes","path","src_PrivateRoute","exact","NotFound","library","add","fas","App","AuthContext_AuthProvider","routes_Routes","Boolean","window","location","hostname","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.551cf965.chunk.js","sourcesContent":["import React from 'react'\n\nconst AuthContext = React.createContext()\n\nclass AuthProvider extends React.Component {\n  \n  constructor(props) {\n    super(props)\n    this.state = {\n      _isAuth :false,\n      _globalLang: 'en'\n    }  \n  }\n\n  _setLang = (lang) => {\n    this.setState({\n      _globalLang:lang\n    });\n  }\n  _setAuth = (auth) => {\n    this.setState({\n      _isAuth:auth\n    });\n  }\n\n  render() {\n    return (\n      <AuthContext.Provider\n        value={{\n          _isAuth: this.state._isAuth,\n          _globalLang: this.state._globalLang,\n          _setAuth:this._setAuth,\n          _setLang:this._setLang\n        }}\n      >\n        {this.props.children}\n      </AuthContext.Provider>\n    )\n  }\n}\n\nconst AuthConsumer = AuthContext.Consumer\n\nexport { AuthProvider, AuthConsumer }\n\n","import React from 'react';\nimport SimpleReactValidator from 'simple-react-validator';\nimport { AuthConsumer } from '../AuthContext';\n\n\nexport default class Login extends React.Component {\n\n    constructor(props){\n        super(props);\n        this.state = {\n            username:\"admin@abc.com\",\n            password:\"admin\",\n            isAuth: false\n        }\n\n        this.validator = new SimpleReactValidator();\n     }\n\n    \n    onUsernameChange = (e) => {\n        this.setState({\n            username: e.target.value,\n        });\n    }\n\n    onPasswordChange = (e) => {\n        this.setState({\n            password: e.target.value,\n        });\n    }\n\n    logIn = (e) => {\n        if (this.validator.allValid()) {\n            if(this.state.username === 'admin@abc.com' && this.state.password === 'admin'){\n                //this.setState({isAuth:true});\n                this.context._setAuth(true);\n                this.props.history.push('/dashboard')\n            }\n          }  else  {\n            this.setState({IsloggedIn:false});\n            this.context._setAuth(true);\n            this.validator.showMessages();\n            this.forceUpdate();\n          }\n\n          e.preventDefault();\n        \n    }\n \n    render() {\n        \n        return(\n            \n              <div className=\"content\">\t\t\t\t\t\t\n                        <div className=\"row\">\n                        <div className=\"col-lg-7\">\n                            <div className=\"card card-default\">\n                                <div className=\"card-header card-header-border-bottom\">\n                                    <h1>Dashboard Login</h1>\n                                </div>\n                                <div className=\"card-body\">\n                                    <form>\n                               \n                                        <div className=\"form-group\">\n                                            <input type=\"text\" className=\"form-control\" name=\"username\" placeholder=\"Your Email *\" onChange={this.onUsernameChange} value={this.state.username}/>\n                                            {this.validator.message('username',this.state.username,'required|email')}\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <input type=\"password\" className=\"form-control\" name=\"password\" maxLength=\"16\" placeholder=\"Your Password *\" onChange={this.onPasswordChange} value={this.state.password}/>\n                                            {this.validator.message('password',this.state.password,'required|password|max:16')}\n                                        </div>\n                                        <div className=\"form-group\">\n                                           <input type=\"input\" className=\"btn btn-primary btn-default\" value=\"Login\" onClick={this.logIn}/>\n                                        </div>\n                                        <div className=\"form-group\">\n                                            <a href=\"#\" className=\"ForgetPwd\">Forget Password?</a>\n                                        </div>\n                                    </form>\n                                </div>\n                            </div>\n                        </div> \n                    </div>\n                </div>  \n                 \n           \n        )\n    }\n}\n\nLogin.contextType = AuthConsumer;","import React from 'react'\nimport {AuthConsumer} from '../AuthContext'\nexport default class Header extends React.Component {\n\n  \n  logout = () => {\n      console.log('logout',this.context);\n      this.context.setAuth(false);\n  }\n \n  render() {\n    return (          \n      \n       <header className=\"main-header \" id=\"header\">\n            <nav className=\"navbar navbar-static-top navbar-expand-lg\">\n              {//<!-- Sidebar toggle button -->\n              }\n              <button id=\"sidebar-toggler\" className=\"sidebar-toggle\">\n                <span className=\"sr-only\">Toggle navigation</span>\n              </button>\n              {//<!-- search form -->\n              }\n              <div className=\"search-form d-none d-lg-inline-block\">\n                <div className=\"input-group\">\n                  <button type=\"button\" name=\"search\" id=\"search-btn\" className=\"btn btn-flat\">\n                    <i className=\"mdi mdi-magnify\"></i>\n                  </button>\n                  <input type=\"text\" name=\"query\" id=\"search-input\" className=\"form-control\" placeholder=\"'button', 'chart' etc.\"\n                    autofocus autocomplete=\"off\" />\n                </div>\n                <div id=\"search-results-container\">\n                  <ul id=\"search-results\"></ul>\n                </div>\n              </div>\n\n              <div className=\"navbar-right \">\n                <ul className=\"nav navbar-nav\">\n                  <li className=\"dropdown notifications-menu\">\n                    <button className=\"dropdown-toggle\" data-toggle=\"dropdown\">\n                      <i className=\"mdi mdi-bell-outline\"></i>\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-right\">\n                      <li className=\"dropdown-header\">You have 5 notifications</li>\n                      <li>\n                        <a href=\"#\">\n                          <i className=\"mdi mdi-account-plus\"></i> New user registered\n                          <span className=\" font-size-12 d-inline-block float-right\"><i className=\"mdi mdi-clock-outline\"></i> 10 AM</span>\n                        </a>\n                      </li>\n                      <li>\n                        <a href=\"#\">\n                          <i className=\"mdi mdi-account-remove\"></i> User deleted\n                          <span className=\" font-size-12 d-inline-block float-right\"><i className=\"mdi mdi-clock-outline\"></i> 07 AM</span>\n                        </a>\n                      </li>\n                      <li>\n                        <a href=\"#\">\n                          <i className=\"mdi mdi-chart-areaspline\"></i> Sales report is ready\n                          <span className=\" font-size-12 d-inline-block float-right\"><i className=\"mdi mdi-clock-outline\"></i> 12 PM</span>\n                        </a>\n                      </li>\n                      <li>\n                        <a href=\"#\">\n                          <i className=\"mdi mdi-account-supervisor\"></i> New client\n                          <span className=\" font-size-12 d-inline-block float-right\"><i className=\"mdi mdi-clock-outline\"></i> 10 AM</span>\n                        </a>\n                      </li>\n                      <li>\n                        <a href=\"#\">\n                          <i className=\"mdi mdi-server-network-off\"></i> Server overloaded\n                          <span className=\" font-size-12 d-inline-block float-right\"><i className=\"mdi mdi-clock-outline\"></i> 05 AM</span>\n                        </a>\n                      </li>\n                      <li className=\"dropdown-footer\">\n                        <a className=\"text-center\" href=\"#\"> View All </a>\n                      </li>\n                    </ul>\n                  </li>\n                  {///<!-- User Account -->\n                  }\n                  <li className=\"dropdown user-menu\">\n                    <button href=\"#\" className=\"dropdown-toggle nav-link\" data-toggle=\"dropdown\">\n                      <img src=\"assets/img/user/user.png\" className=\"user-image\" alt=\"User Image\" />\n                      <span className=\"d-none d-lg-inline-block\">Abdus Salam</span>\n                    </button>\n                    <ul className=\"dropdown-menu dropdown-menu-right\">\n                      {//<!-- User image -->\n                      }\n                      <li className=\"dropdown-header\">\n                        <img src=\"assets/img/user/user.png\" className=\"img-circle\" alt=\"User Image\" />\n                        <div className=\"d-inline-block\">\n                          Abdus Salam <small className=\"pt-1\">abdus@gmail.com</small>\n                        </div>\n                      </li>\n\n                      <li>\n                        <a href=\"profile.html\">\n                          <i className=\"mdi mdi-account\"></i> My Profile\n                        </a>\n                      </li>\n                      <li>\n                        <a href=\"email-inbox.html\">\n                          <i className=\"mdi mdi-email\"></i> Message\n                        </a>\n                      </li>\n                      <li>\n                        <a href=\"#\"> <i className=\"mdi mdi-diamond-stone\"></i> Projects </a>\n                      </li>\n                      <li>\n                        <a href=\"#\"> <i className=\"mdi mdi-settings\"></i> Account Setting </a>\n                      </li>\n\n                      <li className=\"dropdown-footer\">\n                        <a href=\"#\" onClick={this.logout} > <i className=\"mdi mdi-logout\"></i> Log Out </a>\n                      </li>\n                    </ul>\n                  </li>\n                </ul>\n              </div>\n            </nav>\n\n\n          </header>\n \n      )\n  }\n}\n\nHeader.contextType = AuthConsumer;","import React from 'react'\nexport default class Footer extends React.Component {\n    \n    render(){\n        return (\n            <footer class=\"footer mt-auto\">\n            <div class=\"copyright bg-white\">\n              <p>\n                &copy; <span>{new Date().getFullYear()}</span> Copyright PG7ESTH\n              </p>\n            </div>\n           \n          </footer>\n\n      \n        )\n    }\n}\n  \n","import React from \"react\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Link } from \"react-browser-router\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { AuthConsumer } from \"../../AuthContext\";\nexport default class Sidebar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: null,\n      language: \"en\"\n    };\n\n    \n\n  }\n\n  componentDidMount() {\n    if (!this.state.menuItems) {\n      this.getMenuItems();\n    }\n  }\n  switchLang = () => {\n    if (this.context._globalLang === \"en\") {\n      this.context._setLang(\"it\");\n    } else {\n      this.context._setLang(\"en\");\n    }\n  };\n  getMenuItems = async () => {\n    const res = await axios.get(\"/api/menu\");\n    const menuItems = await _.sortBy(res.data, \"sortId\", \"asc\");\n    console.log(\"TCL: Sidebar -> getMenuItems -> menuItems\", menuItems);\n    this.setState({\n      menuItems\n    });\n  };\n\n  render() {\n    return (\n      <aside className=\"left-sidebar bg-sidebar\">\n        <div id=\"sidebar\" className=\"sidebar sidebar-with-footer\">\n          {\n            //<!-- Aplication Brand -->\n          }\n          <div className=\"app-brand\">\n            <a href=\"/index.html\">\n              <svg\n                className=\"brand-icon\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                preserveAspectRatio=\"xMidYMid\"\n                width=\"30\"\n                height=\"33\"\n                viewBox=\"0 0 30 33\"\n              >\n                <g fill=\"none\" fill-rule=\"evenodd\">\n                  <path\n                    className=\"logo-fill-blue\"\n                    fill=\"#7DBCFF\"\n                    d=\"M0 4v25l8 4V0zM22 4v25l8 4V0z\"\n                  />\n                  <path\n                    className=\"logo-fill-white\"\n                    fill=\"#FFF\"\n                    d=\"M11 4v25l8 4V0z\"\n                  />\n                </g>\n              </svg>\n              <span className=\"brand-name\">ESTH DASHBOARD</span>\n            </a>\n          </div>\n          {\n            //<!-- begin sidebar scrollbar -->\n          }\n          <div className=\"sidebar-scrollbar\">\n            {\n              //<!-- sidebar menu -->\n            }\n            <ul className=\"nav sidebar-inner\" id=\"sidebar-menu\">\n              <li className=\"has-sub active expand\">\n                <a\n                  className=\"sidenav-item-link\"\n                  href=\"javascript:void(0)\"\n                  data-toggle=\"collapse\"\n                  data-target=\"#dashboard\"\n                  aria-expanded=\"false\"\n                  aria-controls=\"dashboard\"\n                >\n                  <i className=\"mdi mdi-view-dashboard-outline\" />\n                  <span className=\"nav-text\">Dashboard</span>{\" \"}\n                  <b className=\"caret\" />\n                </a>\n                <ul\n                  className=\"collapse show\"\n                  id=\"dashboard\"\n                  data-parent=\"#sidebar-menu\"\n                >\n                  <div className=\"sub-menu\">\n                    {this.state.menuItems === null\n                      ? \"Loading...\"\n                      : this.state.menuItems.map(items => {\n                          return (\n                            <li className=\"active\">\n                              <Link\n                                to={items.url}\n                                className=\"sidenav-item-link\"\n                                href=\"index.html\"\n                              >\n                                <span className=\"nav-text\">\n                                  <span className=\"fa-layers fa-fw\">\n                                    <FontAwesomeIcon icon={items.icon} />\n                                  </span>{\" \"}\n                                  {\n                                    items.title_lang[0][\n                                      this.context._globalLang\n                                    ]\n                                  }\n                                </span>\n                              </Link>\n                            </li>\n                          );\n                        })}\n                  </div>\n                </ul>\n              </li>\n            </ul>\n          </div>\n\n          <hr className=\"separator\" />\n\n          <div className=\"sidebar-footer\">\n            <div className=\"sidebar-footer-content\">\n              <div class=\"row vertical-align\">\n                <div class=\"col-xs-4\">\n                  <a href=\"#\" title=\"English\">\n                    <img\n                      src=\"/assets/img/elements/ukf.png\"\n                      className=\"img-responsive w-25 p-1\"\n                      onClick={this.switchLang}\n                    />\n                  </a>\n                  <a href=\"#\" title=\"Italian\">\n                    <img\n                      src=\"/assets/img/elements/itf.png\"\n                      className=\"img-responsive w-25 p-1\"\n                      onClick={this.switchLang}\n                    />\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </aside>\n    );\n  }\n}\n\nSidebar.contextType = AuthConsumer;\n","import React from 'react'\nimport Header from './Header'\nimport Footer from './Footer'\nimport Sidebar from './menu/Sidebar'\nimport axios from 'axios'\nimport _ from 'lodash';\nimport Routes from '../routes';\nexport default class Main extends React.Component\n{\n  static isPrivate = true\n  \n  render(){\n      return(  \n        <React.Fragment>\n            <Header/>\n              <Sidebar/>              \n              {this.props.children}\n            <Footer/>\n        </React.Fragment>      \n    )\n  }\n}\n//<a name=\"logout\" onClick={handleLogout(history)}>Logout</a>\nconst handleLogout = history => () => {\n  localStorage.removeItem('loggedIn');\n  history.push('/login');\n};\n\n\n\n\n","import React from 'react'\nconst MessageAlert = (props) =>{\n    return(\n        <div className={props.status === 204 ? \n            'alert alert-success alert-highlighted alerttimeout' :\n            props.status === 500 ?\n            'alert alert-danger alert-highlighted alerttimeout' :\n            'alerttimeout hide'} role=\"alert\">\n                    {   props.status === 204 ? \n                        props.successMessage:\n                        props.status === 500 ?\n                        props.errorMessage:\n                        ''\n                     }\n        </div>\n    )\n}\n\nexport default MessageAlert;","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport MessageAlert from \"../commons/MessageAlert\";\nimport ObjectID from \"bson-objectid\";\nimport _ from \"lodash\";\n\nexport default class MenuEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: undefined,\n      url: undefined,\n      title: undefined,\n      active: undefined,\n      auth: undefined,\n      icon: undefined,\n      sortid: undefined,\n      status: undefined\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  componentWillMount() {\n    const id = this.props.match.params.id || null;\n    if (id !== null) {\n      this.getItem(id);\n    }\n  }\n\n  onChange = e => {\n    if (e.currentTarget.name === \"title\") {\n      this.setState({ title: e.currentTarget.value });\n    } else if (e.currentTarget.name === \"active\") {\n      this.setState({ active: e.currentTarget.value });\n    } else if (e.currentTarget.name === \"auth\") {\n      this.setState({ auth: e.currentTarget.value });\n    } else if (e.currentTarget.name === \"icon\") {\n      this.setState({ icon: e.currentTarget.value });\n    } else if (e.currentTarget.name === \"sortid\") {\n      this.setState({ sortid: e.currentTarget.value });\n    }\n  };\n\n  getItem = async id => {\n    const res = await axios.get(\"/api/menu/\" + id);\n    const menuItems = await res.data;\n\n    //Always gets one Item at a time\n\n    if (!_.isEmpty(menuItems)) {\n      this.setState({\n        _id: menuItems._id,\n        url: menuItems.url,\n        title: menuItems.title_lang[0][this.context._globalLang],\n        _innerId: menuItems.title_lang[0]._id,\n        active: menuItems.active,\n        auth: menuItems.auth,\n        icon: menuItems.icon,\n        sortid: menuItems.sortId\n      });\n    }\n  };\n\n  onFormSubmit = e => {\n    if (this.validator.allValid()) {\n      const langPrefix = this.context._globalLang;\n      //prepare data to post\n      const where = {\n        _id: ObjectID(this.state._id),\n        \"title_lang._id\": ObjectID(this.state._innerId)\n      }; //{_id:ObjectID(this.state._id)}\n      const set = {\n        [\"title_lang.$.\" + langPrefix]: this.state.title,\n        active: this.state.active,\n        auth: this.state.auth,\n        icon: this.state.icon,\n        sortId: this.state.sortid\n      };\n\n      axios\n        .post(\"/menu/update\", {\n          data: { where, set }\n        })\n        .then(res => {\n          if (res.status === 204) {\n            this.setState({\n              status: 204\n            });\n\n            setTimeout(() => {\n              this.setState({\n                status: \"\"\n              });\n            }, 2000);\n          }\n        })\n        .catch(err => {\n          this.setState({\n            status: 500\n          });\n        });\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n    e.preventDefault();\n  };\n\n  render() {\n    if (!_.isEmpty(this.state._id)) {\n      return (\n        <Main>\n          <div className=\"card card-default\">\n            <div className=\"card-header card-header-border-bottom\">\n              <h2>\n                <span className=\"fa-layers fa-fw\">\n                  <FontAwesomeIcon icon=\"pencil-alt\" />\n                </span>{\" \"}\n                Edit Menu\n              </h2>\n            </div>\n            <div className=\"card-body\">\n              <form>\n                <div className=\"row\">\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label for=\"id\">ID</label>\n                      <input\n                        name=\"id\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        value={this.state._id}\n                        disabled\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label for=\"title\">Title Language</label>\n                      <input\n                        name=\"title\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"Title\"\n                        autoComplete=\"off\"\n                        value={this.state.title}\n                        onChange={e => this.onChange(e)}\n                      />\n                      {this.validator.message(\n                        \"title\",\n                        this.state.title,\n                        \"required\"\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label for=\"url\">URL</label>\n                      <input\n                        name=\"url\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"URL\"\n                        disabled\n                        value={this.state.url}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"row\">\n                      <div className=\"col-6\">\n                        <div className=\"form-group\">\n                          <label for=\"active\">Active</label>\n                          <select\n                            className=\"form-control\"\n                            name=\"active\"\n                            id=\"active\"\n                            value={this.state.active}\n                            onChange={e => this.onChange(e)}\n                          >\n                            <option value=\"true\">True</option>\n                            <option value=\"false\">False</option>\n                          </select>\n                        </div>\n                      </div>\n                      <div className=\"col-6\">\n                        <div className=\"form-group\">\n                          <label for=\"active\">Authentication</label>\n                          <select\n                            className=\"form-control\"\n                            name=\"auth\"\n                            id=\"auth\"\n                            onChange={e => this.onChange(e)}\n                            value={this.state.auth}\n                          >\n                            <option value=\"true\">True</option>\n                            <option value=\"false\">False</option>\n                          </select>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label for=\"icon\">Icon</label>\n                      <input\n                        name=\"icon\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"FontAwesome Icon\"\n                        autoComplete=\"off\"\n                        value={this.state.icon}\n                        onChange={e => this.onChange(e)}\n                      />\n                      {this.validator.message(\n                        \"icon\",\n                        this.state.icon,\n                        \"required\"\n                      )}\n                    </div>\n                  </div>\n                  <div className=\"col-sm-6\">\n                    <div className=\"form-group\">\n                      <label for=\"sortid\">SortID</label>\n                      <input\n                        name=\"sortid\"\n                        type=\"text\"\n                        className=\"form-control\"\n                        placeholder=\"SortID\"\n                        value={this.state.sortid}\n                        onChange={e => this.onChange(e)}\n                      />\n                      {this.validator.message(\n                        \"sortid\",\n                        this.state.sortid,\n                        \"required|numeric\"\n                      )}\n                    </div>\n                  </div>\n                </div>\n                <MessageAlert\n                  status={this.state.status}\n                  successMessage=\"Record has been updated.\"\n                  errorMessage=\"An error occured while performing operation.\"\n                />\n                <div className=\"form-footer pt-5 border-top\">\n                  <button\n                    type=\"submit\"\n                    className=\"btn btn-primary btn-default\"\n                    onClick={this.onFormSubmit}\n                  >\n                    Update\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </Main>\n      );\n    } else return(<Main><p className=\"centerauto\">NO DATA</p></Main>)\n  }\n}\n\nMenuEditor.contextType = AuthConsumer;\n","import React from \"react\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst ColumnVisibility = props => {\n  const { columns,setColumnVisibility } = props;\n\n  \n  return (\n    <div className=\"button-group float-right clearboth\">\n      <button\n        type=\"button\"\n        className=\"btn btn-default btn-sm\"\n        data-toggle=\"dropdown\"\n\n      >\n        <FontAwesomeIcon icon={\"eye\"} />\n      </button>\n      <ul className=\"dropdown-menu checkbox-menu allow-focus\">\n        {columns.map(({ name, visible },index) => {\n          if (!_.isEmpty(name)) {\n            return (\n              <li>\n                <label className=\"control control-checkbox\">\n                  {name}\n                  <input type=\"checkbox\" defaultChecked={visible} onChange={() => {setColumnVisibility(index)}}/>\n                  <div className=\"control-indicator\" />\n                </label>\n              </li>\n            );\n          }\n        })}\n      </ul>\n    </div>\n  );\n};\n\nexport default ColumnVisibility;\n","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport ColumnVisibility from \"../grid/ColumnVisibility\";\n\n\nexport default class MenuDetail extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: null,\n      status: \"\",\n      openModal: false,\n      deleteRecordId: null,\n      rows: [],\n      columns: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.menuItems) {\n      this.getColumns();\n      this.getMenuItems();\n    }\n  }\n\n  //not using these functions just kept\n  //for reference of use for confirmation modal\n\n  onCloseModal = () => {\n    this.setState({\n      openModal: false,\n      deleteRecordId: null\n    });\n  };\n\n  openModalConfirmation = data => {\n    this.setState({ openModal: true, deleteRecordId: data._id });\n  };\n\n  //reference use of confirmation ends\n\n  handleEditRow = data => {\n    this.props.history.push({\n      pathname: \"/menueditor/\" + data._id\n    });\n  };\n\n  getColumns = () => {\n    const columns = [\n      { key: \"_id\", visible: false },\n      { key: \"title_lang\", name: \"Title\", visible: true },\n      { key: \"url\", name: \"URL\", visible: true },\n      { key: \"active\", name: \"Active\", visible: false },\n      { key: \"auth\", name: \"IsAuth\", visible: false },\n      { key: \"icon\", name: \"Icon\", visible: true },\n      { key: \"sortId\", name: \"SortID\", visible: false },\n      {\n        key: \"edit\",\n        getRowMetaData: row => row,\n        formatter: ({ dependentValues }) => (\n          <a\n            href=\"javascript:;\"\n            onClick={() => this.handleEditRow(dependentValues)}\n          >\n            <FontAwesomeIcon icon={\"pencil-alt\"} />\n          </a>\n        ),\n        width: 35,\n        visible: true\n      } \n    ];\n\n    this.setState({ columns });\n  };\n\n  getMenuItems = async () => {\n    const res = await axios.get(\"api/menu\");\n    const menuItems = await _.sortBy(res.data, \"sortId\", \"asc\");\n    const rows = [];\n\n    menuItems.map(items => {\n      rows.push({\n        _id: items._id,\n        title_lang: items.title_lang[0][this.context._globalLang],\n        url: items.url,\n        active: items.active.toString(),\n        auth: items.auth.toString(),\n        icon: items.icon,\n        sortId: items.sortId\n      });\n    });\n\n    this.setState({ rows });\n  };\n\n  setColumnVisibility = index => {\n    const columns = [...this.state.columns];\n    const toggleValue = columns[index].visible;\n    columns[index].visible = !toggleValue;\n    this.setState({ columns });\n  };\n\n  render() {\n\n    //!important function for hiding and displaying columns \n    const columns = this.state.columns.filter(\n      column => column.visible === true\n    );\n\n    return (\n      <Main>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"card card-table-border-none\">\n                  <div className=\"card-header card-header-border-bottom\">\n                    <h2>\n                      <span className=\"fa-layers fa-fw\">\n                        <FontAwesomeIcon icon=\"wrench\" />\n                      </span>\n                      Menu Settings\n                    </h2>\n                  </div>\n                  <div className=\"card-body pt-0 pb-5\">\n                    <div className=\"table card-table table-responsive table-responsive-large\">\n                      <p className=\"mb-5\">\n                        Use <code>.Menu Settings</code> to edit menu items.\n                      </p>\n                      \n                      <ColumnVisibility\n                        columns={this.state.columns}\n                        setColumnVisibility={this.setColumnVisibility}\n                      />\n\n                      <ReactDataGrid\n                        className=\"table card-table table-responsive table-responsive-large\"\n                        enableSingleRowSelect={true}\n                        enableCellSelect={true}\n                        columns={columns}\n                        rowGetter={i => this.state.rows[i]}\n                        rowsCount={this.state.rows.length}\n                        enableCellSelect={true}\n                        minHeight={500}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Main>\n    );\n  }\n}\n\n//\nMenuDetail.contextType = AuthConsumer;\n","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport MessageAlert from \"../commons/MessageAlert\";\n\nexport default class SServiceEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pid: \"\",\n      cid: \"\", //this.data._id,\n      url: \"\", //this.data.url,\n      provider: \"\", //this.data.provider_lang,\n      imageurl: \"\", //this.data.imageurl,\n      desc_lang: \"\", //this.data.desc_lang\n      status: \"\",\n      sortId: \"\",\n      category: [],\n      categoryId:\"\"\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  componentWillMount() {\n    const pid = this.props.match.params.pid || null;\n    const cid = this.props.match.params.cid || null;\n\n    if (pid !== null && cid !== null) {\n      this.getItem(pid, cid);\n    } else {\n      this.getCategory();\n    }\n  }\n\n  onChange = e => {\n\n    \n\n    if (e.currentTarget.name === \"provider\") {\n      this.setState({\n        provider: e.currentTarget.value\n      });\n    } else if (e.currentTarget.name === \"url\") {\n      this.setState({\n        url: e.currentTarget.value\n      });\n    } else if (e.currentTarget.name === \"sortId\") {\n      this.setState({\n        sortId: e.currentTarget.value\n      });\n    } else if (e.currentTarget.name === \"slug\") {\n      this.setState({\n        slug: e.currentTarget.value\n      });\n    } else if (e.currentTarget.name === \"imageurl\") {\n      this.setState({\n        imageurl: e.currentTarget.value\n      });\n    } else if (e.currentTarget.name === \"desc_lang\") {\n      this.setState({\n        desc_lang: e.currentTarget.value\n      });\n    }\n    else if (e.currentTarget.name === \"category\") {\n        this.setState({\n             categoryId: e.currentTarget.value\n        });\n        console.log(this.state.categoryId);\n      }\n  };\n\n  getCategory = async () => {\n    const lang = this.context._globalLang;\n    const res = await axios.get(\"/api/sideservicesgetcat/\" + lang);\n    const catItems = []\n    res.data.map(({_id,cat_lang})=>{\n        catItems.push({_id,value:cat_lang[0][this.context._globalLang]});\n    })\n    this.setState({\n        category: [...catItems] \n    });\n    //console.log('TCL: SServiceEditor -> getCategory -> this.state.category', this.state.category)\n  };\n  getItem = async (pid, cid) => {\n    const res = await axios.get(\"/api/sideservices/\" + pid + \"/\" + cid);\n    const sItems = await res.data;\n    \n    sItems.map(({_id,provider_name,url,imageurl,slug,sortId,desc_lang}) => {\n        console.log(_id,provider_name,url,imageurl,slug,sortId,desc_lang);\n    });\n    \n    this.setState({\n      pid: this.props.match.params.pid || null,\n      cid: sItems[0].providers[0]._id,\n      provider: sItems[0].providers[0].provider_name,\n      url: sItems[0].providers[0].url,\n      imageurl: sItems[0].providers[0].imageurl,\n      slug: sItems[0].providers[0].slug,\n      sortId: sItems[0].providers[0].sortId,\n      //cat_lang:sItems[0].cat_lang[0][this.context._globalLang],\n      desc_lang: sItems[0].providers[0].desc_lang[this.context._globalLang]\n    });\n  };\n  onFormSubmit = e => {\n    if (this.validator.allValid()) {\n      const langPrefix = this.context._globalLang;\n      const where = {\n        _id: this.state.pid,\n        \"providers._id\": this.state.cid\n      };\n      const url = !_.isEmpty(this.state.cid)\n        ? \"/api/sideservice/u\"\n        : \"/api/sideservice/c\";\n      const set = {\n        'providers.$.provider_name': this.state.provider,\n        'providers.$.url':this.state.url,\n        'providers.$.imageurl':this.state.imageurl,\n        ['providers.$.desc_lang.'+this.context._globalLang]:this.state.desc_lang,\n        'providers.$.slug':this.state.slug,\n        'providers.$.sortId':this.state.sortId,\n        }\n\n      const data = {\n        _id:this.state.categoryId,\n        provider_name: this.state.provider,\n        url: this.state.url,\n        imageurl: this.state.imageurl,\n        desc_lang: {[this.context._globalLang]:this.state.desc_lang},\n        slug: this.state.slug,\n        sortId: this.state.sortId\n      };\n\n      axios.post(url, {\n          data: !_.isEmpty(this.state.cid) ? {where,set} : data\n        })\n        .then(res => {\n          if (res.status === 204) {\n            this.setState({\n              status: 204\n            });\n\n            setTimeout(() => {\n              this.setState({\n                status: \"\"\n              });\n            }, 2000);\n          }\n        })\n        .catch(err => {\n          this.setState({\n            status: 500\n          });\n        });\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n    e.preventDefault();\n  };\n\n  render() {\n    return (\n      <Main>\n        <div className=\"card card-default\">\n          <div className=\"card-header card-header-border-bottom\">\n            <h2>\n              <span className=\"fa-layers fa-fw\">\n                <FontAwesomeIcon icon=\"pencil-alt\" />\n              </span>\n              Editor\n            </h2>\n          </div>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"row\">\n                <div\n                  className={!_.isEmpty(this.state.cid) ? \"d-none\" : \"col-sm-6\"}\n                >\n                  <div className=\"form-group\">\n                    <label for=\"id\"> Category </label>\n                    <select class=\"form-control\" id=\"category\" name=\"category\" onChange={e => this.onChange(e)}>\n                      <option value=\"\"> Select Category </option>\n                      {this.state.category.map(({_id,value}) => {\n                        return <option value={_id}> {value} </option>;\n                      })}\n                    </select>\n                    {this.validator.message(\n                      \"category\",\n                      this.state.category,\n                      \"required\"\n                    )}\n                  </div>\n                </div>\n                <div\n                  className={_.isEmpty(this.state.cid) ? \"d-none\" : \"col-sm-6\"}\n                >\n                  <div className=\"form-group\">\n                    <label for=\"id\"> ID </label>\n                    <input\n                      name=\"id\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={this.state.cid}\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label for=\"provider\"> Provider Name </label>\n                    <input\n                      name=\"provider\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Provider Name\"\n                      autoComplete=\"off\"\n                      value={this.state.provider}\n                      onChange={e => this.onChange(e)}\n                    />\n                    {this.validator.message(\n                      \"provider\",\n                      this.state.provider,\n                      \"required\"\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label for=\"url\"> URL </label>\n                    <input\n                      name=\"url\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"URL\"\n                      value={this.state.url}\n                      onChange={e => this.onChange(e)}\n                    />\n                    {this.validator.message(\"url\", this.state.url, \"required\")}\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label for=\"imageurl\"> ImageUrl </label>\n                    <input\n                      name=\"imageurl\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Image Url\"\n                      autoComplete=\"off\"\n                      value={this.state.imageurl}\n                      onChange={e => this.onChange(e)}\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label for=\"desc_lang\"> Description </label>\n                    <input\n                      name=\"desc_lang\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Description\"\n                      value={this.state.desc_lang}\n                      onChange={e => this.onChange(e)}\n                    />\n                    {this.validator.message(\n                      \"desc_lang\",\n                      this.state.desc_lang,\n                      \"required\"\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label for=\"slug\"> Slug </label>\n                    <input\n                      name=\"slug\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Slug\"\n                      value={this.state.slug}\n                      onChange={e => this.onChange(e)}\n                    />\n                    {this.validator.message(\n                      \"slug\",\n                      this.state.slug,\n                      \"required\"\n                    )}\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label for=\"sortId\"> SortId </label>\n                    <input\n                      name=\"sortId\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"SortId\"\n                      value={this.state.sortId}\n                      onChange={e => this.onChange(e)}\n                    />\n                    {this.validator.message(\n                      \"sortId\",\n                      this.state.sortId,\n                      \"required\"\n                    )}\n                  </div>\n                </div>\n              </div>\n              <MessageAlert\n                status={this.state.status}\n                successMessage=\"Record has been updated.\"\n                errorMessage=\"An error occured while performing operation.\"\n              />\n              <div className=\"form-footer pt-5 border-top\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-default\"\n                  onClick={this.onFormSubmit}\n                >\n                  {_.isEmpty(this.state.cid) ? \"Create\" : \"Update\"}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </Main>\n    );\n  }\n}\n\nSServiceEditor.contextType = AuthConsumer;\n","import React from \"react\";\nimport Modal from \"react-responsive-modal\";\nconst Confirmation = props => {\n\n  const {openModal,onCloseModal,handleDeleteRow} = props;\n \n  return(\n      <Modal open={openModal} onClose={() => {onCloseModal()}} center>\n    <div className=\"modal-header\">Delete Record</div>\n    <div className=\"modal-body\">Do you really want to delete this Record?</div>\n    <div className=\"modal-footer\">\n      <button\n        type=\"button\"\n        className=\"btn btn-primary\"\n        data-dismiss=\"modal\"\n        onClick={()=>{onCloseModal()}}\n      >\n        Close\n      </button>\n      <button\n        type=\"button\"\n        className=\"btn btn-danger\"\n        onClick={() => {handleDeleteRow()}}\n      >\n        Delete\n      </button>\n    </div>\n  </Modal>\n  );\n};\n\nexport default Confirmation;\n","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { Link } from \"react-browser-router\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Confirmation from \"../commons/Confirmation\";\nimport MessageAlert from \"../commons/MessageAlert\";\nimport ColumnVisibility from '../grid/ColumnVisibility';\n\nexport default class SServices extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: null,\n      status: undefined,\n      openModal: false,\n      parentId: null,\n      deleteRecordId: null,\n      rows: [],\n      columns:[]\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.menuItems) {\n      this.getColumns();\n      this.getMenuItems();\n    }\n  }\n\n  onCloseModal = () => {\n    this.setState({\n      openModal: false,\n      deleteRecordId: null\n    });\n  };\n\n  openModalConfirmation = data => {\n    this.setState({\n      openModal: true,\n      deleteRecordId: data._id,\n      parentId: data.parentid\n    });\n  };\n\n  handleEditRow = data => {\n    this.props.history.push({\n      pathname: \"/sserviceeditor/\" + data.parentid + \"/\" + data._id\n    });\n  };\n\n  handleDeleteRow = () => {\n    this.setState({ openModal: false });\n    const _id = this.state.deleteRecordId;\n    const parentid = this.state.parentId;\n    const data = { _id, parentid };\n\n    axios\n      .post(\"/api/sideservice/d/\", data)\n      .then(res => {\n        if (res.status === 204) {\n          let rows = this.state.rows.slice();\n          rows = rows.filter(row => row._id !== _id);\n          this.setState({\n            rows,\n            status: 204\n          });\n\t    /*\n          setTimeout(() => {\n            this.setState({\n              status: \"\"\n            });\n          }, 2000);\n\t     */\n        }\n      })\n      .catch(err => {\n        this.setState({\n          status: 500\n        });\n        console.log(err);\n      });\n  };\n\n  getColumns = () => {\n    const columns = [\n      { key: \"parentid\",  visible: false },\n      { key: \"_id\",  visible: false },\n      { key: \"cat_lang\", name: \"Category\", visible: true },\n      { key: \"provider_name\", name: \"Provider\", visible: true },\n      { key: \"url\", name: \"URL\", visible: true },\n      { key: \"imageurl\", name: \"ImageURL\", visible: false },\n      { key: \"desc_lang\", name: \"Description\" , visible: false},\n      { key: \"slug\", name: \"Slug\", visible: false },\n      //{key:\"class\",name:\"Class\"},\n      /*{key:\"price\",name:\"Price\"},\n            {key:\"units\",name:\"Units\"},*/\n      { key: \"sortId\", name: \"SortId\", visible: false },\n      {\n        key: \"edit\",\n        getRowMetaData: row => row,\n        formatter: ({ dependentValues }) => (\n          <a\n            href=\"javascript:;\"\n            onClick={() => this.handleEditRow(dependentValues)}\n          >\n            <FontAwesomeIcon icon={\"pencil-alt\"} />\n          </a>\n        ),\n        width: 35, visible: true\n      },\n      {\n        key: \"delete\",\n        getRowMetaData: row => row,\n        formatter: ({ dependentValues }) => (\n          <a\n            href=\"javascript:;\"\n            onClick={() => this.openModalConfirmation(dependentValues)}\n          >\n            <FontAwesomeIcon icon={\"trash\"} className=\"text-danger\" />\n          </a>\n        ),\n        width: 35,\n        visible: true\n      }\n    ];\n\n\n    this.setState({columns})\n\n  };\n\n\n  setColumnVisibility = index => {\n    const columns = [...this.state.columns];\n    const toggleValue = columns[index].visible;\n    columns[index].visible = !toggleValue;\n    this.setState({ columns });\n  };\n\n\n  getMenuItems = async () => {\n    const res = await axios.get(\"/api/sideservices\");\n    const menuItems = await _.sortBy(res.data, \"sortId\", \"asc\");\n    const rows = [];\n    menuItems.map(items => {\n      if (!_.isEmpty(items.cat_lang) && !_.isEmpty(items.providers)) {\n        items.providers.map(\n          (\n            { _id, provider_name, url, desc_lang, imageurl, slug, sortId },\n            index\n          ) => {\n            rows.push({\n              parentid: items._id || null,\n              _id: _id || null,\n              cat_lang: !_.isEmpty(items.cat_lang[0])\n                ? items.cat_lang[0][this.context._globalLang]\n                : null,\n              provider_name: provider_name || null,\n              url: url || null,\n              imageurl: imageurl || null,\n              desc_lang: !_.isEmpty(desc_lang[this.context._globalLang])\n                ? desc_lang[this.context._globalLang]\n                : null,\n              slug: slug || null,\n              //class:items.providers[0].class || null,\n              /*price:items.providers[0].price.$numberDecimal,\n          units:items.providers[0].units || null,*/\n              sortId: sortId || null\n            });\n          }\n        );\n      }\n    });\n\n    this.setState({ rows });\n  };\n\n  render() {\n    const { rows, status, openModal } = this.state;\n   const columns = this.state.columns.filter(\n      column => column.visible === true\n    );\n    return (\n      <Main>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"card card-table-border-none\">\n                  <div className=\"card-header card-header-border-bottom\">\n                    <h2>\n                      <span className=\"fa-layers fa-fw\">\n                        <FontAwesomeIcon icon=\"wrench\" />\n                      </span>\n                      Service Categories\n                    </h2>\n                  </div>\n                  <div className=\"card-body pt-0 pb-5\">\n                    <div className=\"table card-table table-responsive table-responsive-large\">\n                      <p className=\"mb-5\">\n                        Use <code>.Menu Settings</code> to edit menu items.\n                      </p>\n                      <Link\n                        className=\"btn btn-primary mb-3 float-right\"\n                        to=\"/sserviceeditor/\"\n                      >\n                        Create +\n                      </Link>\n                      <MessageAlert\n                        status={status}\n                        successMessage=\"Record has been deleted.\"\n                        errorMessage=\"An error occured while performing operation.\"\n                      />\n                      <Confirmation\n                        openModal={openModal}\n                        onCloseModal={this.onCloseModal}\n                        handleDeleteRow={this.handleDeleteRow}\n                      />\n                      <ColumnVisibility\n                        columns={this.state.columns}\n                        setColumnVisibility={this.setColumnVisibility}\n                      />\n                      <ReactDataGrid\n                        className=\"table card-table table-responsive table-responsive-large\"\n                        enableSingleRowSelect={true}\n                        enableCellSelect={true}\n                        columns={columns}\n                        rowGetter={i => rows[i]}\n                        rowsCount={rows.length}\n                        enableCellSelect={true}\n                        minHeight={500}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Main>\n    );\n  }\n}\n\nSServices.contextType = AuthConsumer;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nconst getStatusIcon = icon => {\n    const statusIcons = {\n      New: [\n        <a>\n          <FontAwesomeIcon icon={\"plus-square\"} className=\"text-primary\" /> New\n        </a>\n      ],\n      Open: [\n        <a>\n          <FontAwesomeIcon icon={\"door-open\"} className=\"text-success\" /> Open\n        </a>\n      ],\n      InProgress: [\n        <a>\n          <FontAwesomeIcon icon={\"exchange-alt\"} className=\"text-success\" />{\" \"}\n          InProgress\n        </a>\n      ],\n      Closed: [\n        <a>\n          <FontAwesomeIcon icon={\"times-circle\"} className=\"text-danger\" />{\" \"}\n          Closed\n        </a>\n      ],\n      Refused: [\n        <a>\n          <FontAwesomeIcon icon={\"hand-paper\"} className=\"text-danger\" />{\" \"}\n          Refused\n        </a>\n      ]\n    };\n    return statusIcons[icon];\n  };\nexport default getStatusIcon;\n","// language default object START\nconst languageObj = {\n    // login\n    login: {\n\ten: {\n\t    userName: 'Username',\n\t    password: 'Password'\n\t},\n\tit: {\n\t    userName: 'Utente',\n\t    password: 'Password'\n\t}\n    },\n    // menu\n    menu: {\n\ten: {\n\t    pageTitle: 'Menu Settings',\n\t    title: 'Title',\n\t    url: 'URL',\n\t    icon: 'Icon'\n\t},\n\tit: {\n\t    pageTitle: 'Impostazioni Menu',\n\t    title: 'Titolo',\n\t    url: 'URL',\n\t    icon: 'Icona'\n\t}\n    },\n    // services\n    services: {\n\ten: {\n\t    pageTitle: 'Services',\n\t    category: 'Category',\n\t    provider: 'Provider',\n\t    url: 'URL'\n\t},\n\tit: {\n\t    pageTitle: 'Servizi',\n\t    category: 'Categoria',\n\t    provider: 'Fornitore',\n\t    url: 'URL'\n\t}\n    },\n    // services categories\n    servicesCategories: {\n\ten: {\n\t    pageTitle: 'Services Categories',\n\t    category: 'Category'\n\t},\n\tit: {\n\t    pageTitle: 'Services Categories',\n\t    category: 'Categorie Servizi'\n\t}\n    },\n    // services requests\n    servicesRequests: {\n\ten: {\n\t    pageTitle: 'Services Requests',\n\t    serviceName: 'Service Name',\n\t    userName: 'Username',\n\t    option: 'Option',\n\t    status: 'Status',\n\t    pickUpDate: 'Pick-up Date',\n\t    returnDate: 'Return Date',\n\t    updatedDate: 'Updated Date'\n\t},\n\tit: {\n\t    pageTitle: 'Richieste Servizi',\n\t    serviceName: 'Nome Servizio',\n\t    userName: 'Utente',\n\t    option: 'Opzione',\n\t    status: 'Stato',\n\t    pickUpDate: 'Data Ritiro',\n\t    returnDate: 'Data Riconsegna',\n\t    updatedDate: 'Data Aggiornamento'\n\t}\n    },\n    // maintenance\n    maintenance: {\n\ten: {\n\t    pageTitle: 'Maintenance Services',\n\t    type: [\n\t\t'Electricity',\n\t\t'Heating',\n\t\t'Plumbing',\n\t\t'Masonery',\n\t\t'Furniture'\n\t    ]\n\t},\n\tit: {\n\t    pageTitle: 'Servizi Manutenzione',\n\t    type: [\n\t\t'Elettricitá',\n\t\t'Riscaldamento',\n\t\t'Idraulica',\n\t\t'Muratura',\n\t\t'Arredamento'\n\t    ]\n\t}\n    }\n};\n// language default object END\n\n// language switcher class\nexport default class PG7Translator {\n\n    constructor( translationOptions ){\n\n\tif ( this.paramsCheck( translationOptions ) ){ // check passed parameters\n\t    this.selectedLang = translationOptions.lang;\n\t    return translationOptions.section ? this.getTranslated( translationOptions.section ) : this.getTranslated();\n\t}\n\treturn null;\n    }\n\n    paramsCheck( params ){\n\tlet passedCheck = true;\n\tif ( ! params || ! params.lang ){\n\t    passedCheck = false;\n\t}\n\tif ( ! params ){\n\t    console.log( '\\nNo translation parameters passed!\\n' );\n\t}\n\tif ( ! params.lang ){\n\t    console.log( '\\nNo selected translation language!\\n' );\n\t}\n\treturn passedCheck;\n    }\n    \n    getTranslated( requestedSection ){\n\tif ( requestedSection ){ // if specific section is required\n\t    const requestedTranslation = languageObj[ requestedSection ][ this.selectedLang ];\n\t    if ( requestedTranslation ){\n\t\tconsole.log( '\\nTranslated section:\\n', requestedTranslation );\n\t\treturn requestedTranslation;\n\t    }\n\t}\n\t// if no specific section is required, return all translations\n\tif ( ! this.translated ){ // if no translation has been built yet\n\t    this.buildTranslation();\n\t}\n\tconsole.log( '\\nTranslated section:\\n', this.translated );\n\treturn this.translated;\n    }\n    \n    buildTranslation(){\n\tlet translLang = this.selectedLang,\n\t    translation = {};\n\tfor ( const translProp in languageObj ){\n\t    translation[ translProp ] = languageObj[ translProp ][ translLang ];\n\t}\n\tthis.translated = translation; // assign translated object\n    }\n    \n}\n","import React from 'react';\nimport Main from '../Main';\nimport axios from \"axios\";\nimport _ from 'lodash';\nimport { Link } from 'react-browser-router';\nimport ReactDataGrid from 'react-data-grid';\nimport { AuthConsumer } from '../../AuthContext';\nimport getStatusIcon from '../commons/IconsSelector';\nimport PG7Translator from '../commons/PG7Translator';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport Confirmation from '../commons/Confirmation';\nimport MessageAlert from '../commons/MessageAlert';\nimport ColumnVisibility from '../grid/ColumnVisibility';\n\n// ESTH maintenance services\nexport default class MServices extends React.Component {\n\n    // main constructor\n    constructor( props ){\n\tsuper( props );\n\tthis.state = {\n\t    menuItems: null,\n\t    status: undefined,\n\t    openModal: false,\n\t    parentId: null,\n\t    deleteRecordId: null,\n\t    rows: [],\n\t    columns:[]\n\t};\n\n\n    }\n\n    // react after mounting\n    componentDidMount(){\n\tif ( ! this.state.menuItems ) {\n\t    this.getColumns();\n\t    this.getMenuItems();\n\t}\n    }\n\n    // on modal close\n    onCloseModal = () => {\n\tthis.setState( {\n\t    openModal: false,\n\t    deleteRecordId: null\n\t} );\n    };\n\n    // open modal confirmation\n    openModalConfirmation = ( data ) => {\n\tthis.setState( {\n\t    openModal: true,\n\t    deleteRecordId: data._id,\n\t    parentId: data.parentid\n\t} );\n    };\n\n    // handle row editing\n    handleEditRow = data => {\n\tthis.props.history.push( {\n\t    pathname: '/mserviceeditor/' + data.parentid + '/' + data._id\n\t} );\n    };\n\n    // handle row deletion\n    handleDeleteRow = () => {\n\tthis.setState( { openModal: false } );\n\tconst _id = this.state.deleteRecordId;\n\tconst parentid = this.state.parentId;\n\tconst data = { _id, parentid };\n\n\taxios\n\t    .post( '/api/maintenanceservice/d/', data )\n\t    .then( res => {\n\t\tif ( res.status === 204 ){\n\t\t    let rows = this.state.rows.slice();\n\t\t    rows = rows.filter( row => row._id !== _id );\n\t\t    this.setState( {\n\t\t\trows,\n\t\t\tstatus: 204\n\t\t    } );\n\t\t    setTimeout( () => {\n\t\t\tthis.setState({\n\t\t\t    status: ''\n\t\t\t} );\n\t\t    }, 2000 );\n\t\t}\n\t    })\n\t    .catch( err => {\n\t\tthis.setState( {\n\t\t    status: 500\n\t\t} );\n\t\tconsole.log( err );\n\t    });\n    };\n    \n    // get maintenance services columns\n    getColumns(){\n\tconst columns = [\n\t    { key: '_id',  visible: false },\n\t    { key: 'category', name: 'Category', visible: true },\n\t    { key: 'subject', name: 'Subject', visible: true },\n\t    { key: 'status', name: 'Status', visible: true },\n\t    { key: 'damagedGood', name: 'Damage', visible: true },\n\t    {\n\t\tkey: 'edit',\n\t\tgetRowMetaData: ( row ) => row,\n\t\tformatter: ( { dependentValues } ) => (\n\t\t    <a\n\t\t       href='javascript:;'\n\t\t       onClick={ () => this.handleEditRow( dependentValues ) }\n\t\t      >\n\t\t      <FontAwesomeIcon icon={ 'pencil-alt' } />\n\t\t    </a>\n\t\t),\n\t\twidth: 35, visible: true\n\t    },\n\t    {\n\t\tkey: 'delete',\n\t\tgetRowMetaData: ( row ) => row,\n\t\tformatter: ( { dependentValues } ) => (\n\t\t    <a\n\t\t       href='javascript:;'\n\t\t       onClick={ () => this.openModalConfirmation( dependentValues ) }\n\t\t      >\n\t\t      <FontAwesomeIcon icon={ 'trash' } className='text-danger' />\n\t\t    </a>\n\t\t),\n\t\twidth: 35,\n\t\tvisible: true\n\t    }\n\t];\n\t// set columns in state\n\tthis.setState( { columns } );\n    }\n\n    // set column visibility\n    setColumnVisibility = index => {\n\tconst columns = [ ...this.state.columns ];\n\tconst toggleValue = columns[ index ].visible;\n\tcolumns[ index ].visible = ! toggleValue;\n\tthis.setState( { columns } );\n    };\n\n    // get menu items\n    getMenuItems = async () => {\n\tconst res = await axios.get( '/api/maintenanceservices' ),\n\t      menuItems = await _.sortBy( res.data, 'sortId', 'asc' ),\n\t      rows = [];\n\tconsole.log( '\\nReached maintenance items!\\nItems:\\n', menuItems );\n\t// map each menu items\n\tmenuItems.map( items => {\n\t    if ( !_.isEmpty( items.cat_lang ) && ! _.isEmpty( items.Requests ) ) {\n\t\titems.Requests.map(\n\t\t    (\n\t\t\t{\n\t\t\t    _id,\n\t\t\t    userID,\n\t\t\t    subject,\n\t\t\t    category,\n\t\t\t    description,\n\t\t\t    imagePath,\n\t\t\t    createdDate,\n\t\t\t    availibilityDate,\n\t\t\t    updateDate,\n\t\t\t    status,\n\t\t\t    damagedGood\n\t\t\t},\n\t\t\tthisRequestIndex\n\t\t    ) => {\n\t\t\tconst thisRequest = items.Requests[ thisRequestIndex ];\n\t\t\trows.push(\n\t\t\t    {\n\t\t\t\t_id: _id || null,\n\t\t\t\tcat_lang: ! _.isEmpty( items.cat_lang[ 0 ] )\n\t\t\t\t    ? items.cat_lang[ 0 ][ this.context._globalLang ]\n\t\t\t\t    : null,\n\t\t\t\timagePath: thisRequest.imagePath || null,\n\t\t\t\tsubject: thisRequest.subject || null,\n\t\t\t\tcategory: items.cat_lang[ 0 ].title[ this.context._globalLang ] || null,\n\t\t\t\tstatus: thisRequest.status || null,\n\t\t\t\tdescription: thisRequest.description || null,\n\t\t\t\tdamagedGood: thisRequest.damagedGood || null,\n\t\t\t\tsortId: thisRequest.createdDate || null\n\t\t\t    }\n\t\t\t);\n\t\t\tconsole.log( '\\nThis request:\\n', thisRequest );\n\t\t    }\n\t\t);\n\t    }\n\t});\n\t// set rows\n\tthis.setState({ rows });\n    }\n\n    // react rendering\n    render(){\n\tconst translationTEST = new PG7Translator( { lang: 'en' } ),\n\t      { rows, status, openModal } = this.state,\n\t      columns = this.state.columns.filter(\n\t\t  column => column.visible === true\n\t      );\n\treturn(\n\t    <Main>\n              <div className=\"content-wrapper\">\n\t\t<div className=\"content\">\n\t\t  <div className=\"row\">\n\t\t    <div className=\"col-lg-12\">\n\t\t      <div className=\"card card-table-border-none\">\n\t\t\t<div className=\"card-header card-header-border-bottom\">\n\t\t\t  <h2>\n\t\t\t    <span className=\"fa-layers fa-fw\">\n\t\t\t      <FontAwesomeIcon icon=\"wrench\" />\n\t\t\t    </span>\n\t\t\t    Maintenance Services\n\t\t\t  </h2>\n\t\t\t</div>\n\t\t\t<div className=\"card-body pt-0 pb-5\">\n\t\t\t  <div className=\"table card-table table-responsive table-responsive-large\">\n\n\t\t\t    <Link\n                               className=\"btn btn-primary mb-3 float-right\"\n                               to=\"/sserviceeditor/\"\n\t\t\t       >\n                              Create +\n\t\t\t    </Link>\n\t\t\t    <MessageAlert\n                               status={status}\n                               successMessage=\"Record has been deleted.\"\n                               errorMessage=\"An error occured while performing operation.\"\n\t\t\t       />\n\t\t\t    <Confirmation\n                               openModal={openModal}\n                               onCloseModal={this.onCloseModal}\n                               handleDeleteRow={this.handleDeleteRow}\n\t\t\t       />\n\t\t\t    <ColumnVisibility\n                               columns={this.state.columns}\n                               setColumnVisibility={this.setColumnVisibility}\n\t\t\t       />\n\t\t\t    <ReactDataGrid\n                               className=\"table card-table table-responsive table-responsive-large\"\n                               enableSingleRowSelect={true}\n                               enableCellSelect={true}\n                               columns={columns}\n                               rowGetter={i => rows[i]}\n                              rowsCount={rows.length}\n                              enableCellSelect={true}\n                              minHeight={500}\n\t\t\t      />\n\t\t\t      \n\t\t\t  </div>\n\t\t\t</div>\n\t\t      </div>\n\t\t    </div>\n\t\t  </div>\n\t\t</div>\n\t      </div>\n\t    </Main>\n\t);\n    }\n    \n}\n\nMServices.contextType = AuthConsumer;\n","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MessageAlert from \"../commons/MessageAlert\";\nimport Confirmation from \"../commons/Confirmation\";\nimport ColumnVisibility from '../grid/ColumnVisibility';\n\nimport { Link } from \"react-browser-router\";\n\nexport default class CatDetails extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: null,\n      status: \"\",\n      openModal: false,\n      deleteRecordId: null,\n      rows: [],\n      columns: []\n    };\n  }\n\n  componentDidMount() {\n    if (!this.state.menuItems) {\n      this.getColumns();\n      this.getMenuItems();\n    }\n  }\n\n  onCloseModal = () => {\n    this.setState({\n      openModal: false,\n      deleteRecordId: null\n    });\n  };\n\n  openModalConfirmation = data => {\n    this.setState({ openModal: true, deleteRecordId: data._id });\n  };\n\n  handleEditRow = data => {\n    this.props.history.push({\n      pathname: \"/cateditor/\" + data._id\n    });\n  };\n\n  handleDeleteRow = () => {\n    this.setState({ openModal: false });\n    const _id = this.state.deleteRecordId;\n    axios\n      .post(\"/api/sideservicecat/d/\" + _id)\n      .then(res => {\n        if (res.status === 204) {\n          let rows = this.state.rows.slice();\n          rows = rows.filter(row => row._id !== _id);\n          this.setState({\n            rows,\n            status: 204\n          });\n          setTimeout(() => {\n            this.setState({\n              status: \"\"\n            });\n          }, 2000);\n        }\n      })\n      .catch(err => {\n        this.setState({\n          status: 500\n        });\n        console.log(err);\n      });\n  };\n\n  getColumns = () => {\n    const columns = [\n      { key: \"_id\",visible:false },\n      { key: \"cat_lang\", name: \"Category\",visible:true },\n      {\n        key: \"edit\",\n        getRowMetaData: row => row,\n        formatter: ({ dependentValues }) => (\n          <a\n            href=\"javascript:;\"\n            onClick={() => this.handleEditRow(dependentValues)}\n          >\n            <FontAwesomeIcon icon={\"pencil-alt\"} />\n          </a>\n        ),\n        width: 35,\n        visible:true\n      },\n      {\n        key: \"delete\",\n        getRowMetaData: row => row,\n        formatter: ({ dependentValues }) => (\n          <a\n            href=\"javascript:;\"\n            onClick={() => this.openModalConfirmation(dependentValues)}\n          >\n            <FontAwesomeIcon icon={\"trash\"} className=\"text-danger\" />\n          </a>\n        ),\n        width: 35,\n        visible:true\n      }\n    ];\n\n    this.setState({ columns });\n  };\n\n  setColumnVisibility = index => {\n    const columns = [...this.state.columns];\n    const toggleValue = columns[index].visible;\n    columns[index].visible = !toggleValue;\n    this.setState({ columns });\n  };\n\n  getMenuItems = async () => {\n    const res = await axios.get(\"api/sideservices\");\n    const menuItems = await _.sortBy(res.data, \"sortId\", \"asc\");\n    const rows = [];\n\n    menuItems.map(items => {\n      rows.push({\n        _id: items._id,\n        cat_lang: items.cat_lang[0][this.context._globalLang]\n      });\n    });\n\n    this.setState({ rows });\n  };\n\n  render() {\n    const { openModal,  rows, status } = this.state;\n    const columns = this.state.columns.filter(\n      column => column.visible === true\n    );\n    return (\n      <Main>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"card card-table-border-none\">\n                  <div className=\"card-header card-header-border-bottom\">\n                    <h2>\n                      <span className=\"fa-layers fa-fw\">\n                        <FontAwesomeIcon icon=\"wrench\" />\n                      </span>\n                      Service Categories\n                    </h2>\n                  </div>\n                  <div className=\"card-body pt-0 pb-5\">\n                    <div className=\"table card-table table-responsive table-responsive-large\">\n                      <p className=\"mb-5\">\n                        Use <code>.Menu Settings</code> to edit menu items.\n                      </p>\n                      <Link\n                        className=\"btn btn-primary mb-3 float-right\"\n                        to=\"/cateditor/\"\n                      >\n                        Create +\n                      </Link>\n                      <MessageAlert\n                        status={status}\n                        successMessage=\"Record has been deleted.\"\n                        errorMessage=\"An error occured while performing operation.\"\n                      />\n                      <Confirmation\n                        openModal={openModal}\n                        onCloseModal={this.onCloseModal}\n                        handleDeleteRow={this.handleDeleteRow}\n                      />\n                       <ColumnVisibility\n                        columns={this.state.columns}\n                        setColumnVisibility={this.setColumnVisibility}\n                      />\n                      <ReactDataGrid\n                        className=\"table card-table table-responsive table-responsive-large\"\n                        enableSingleRowSelect={true}\n                        enableCellSelect={true}\n                        columns={columns}\n                        rowGetter={i => rows[i]}\n                        rowsCount={rows.length}\n                        enableCellSelect={true}\n                        minHeight={500}\n                      />\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Main>\n    );\n  }\n}\n\nCatDetails.contextType = AuthConsumer;\n","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport MessageAlert from \"../commons/MessageAlert\";\n\nexport default class CatEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      _id: \"\", //this.data._id,\n      cat_lang: \"\" //this.data.url,\n    };\n    this.validator = new SimpleReactValidator();\n  }\n\n  componentWillMount() {\n    const id = this.props.match.params.id || null;\n    if (id !== null) {\n      this.getItem(id);\n    }\n  }\n\n  onChange = e => {\n    if (e.currentTarget.name === \"category\") {\n      this.setState({ cat_lang: e.currentTarget.value });\n    }\n  };\n\n  getItem = async id => {\n    const res = await axios.get(\"/api/sideservicescat/\" + id);\n    const catItems = await res.data;\n    this.setState({\n      _id: catItems.cat_lang[0]._id,\n      cat_lang: catItems.cat_lang[0][this.context._globalLang]\n    });\n  };\n\n  onFormSubmit = e => {\n    e.preventDefault();\n\n    if (this.validator.allValid()) {\n      const url = !_.isEmpty(this.state._id)\n        ? \"/api/sideservicecat/u\"\n        : \"/api/sideservicecat/c\";\n      let data = null;\n      if (!_.isEmpty(this.state._id)) {\n        //data ready for update\n        const skey = \"cat_lang.$.\" + this.context._globalLang;\n        data = { \"cat_lang._id\": this.state._id, [skey]: this.state.cat_lang };\n      } else {\n        //data ready for create\n        //data = {'cat_lang':[{_id:ObjectID(),[this.context._globalLang]:this.state.cat_lang}]};\n        data = { [this.context._globalLang]: this.state.cat_lang };\n      }\n\n      axios\n        .post(url, data)\n        .then(res => {\n          if (res.status === 204) {\n            this.setState({\n              status: 204\n            });\n\n            setTimeout(() => {\n              this.setState({\n                status: \"\"\n              });\n            }, 2000);\n          }\n        })\n        .catch(err => {\n          this.setState({\n            status: 500\n          });\n          console.log(err);\n        });\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n  };\n\n  render() {\n    return (\n      <Main>\n        <div className=\"card card-default\">\n          <div className=\"card-header card-header-border-bottom\">\n            <h2>\n              <span className=\"fa-layers fa-fw\">\n                <FontAwesomeIcon icon=\"pencil-alt\" />\n              </span>{\" \"}\n              Category Editor\n            </h2>\n          </div>\n          <div className=\"card-body\">\n            <form>\n              <div className=\"row\">\n                <div\n                  className={_.isEmpty(this.state._id) ? \"d-none\" : \"col-sm-6\"}\n                >\n                  <div className=\"form-group\">\n                    <label for=\"id\">ID</label>\n                    <input\n                      name=\"id\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={this.state._id}\n                      disabled\n                    />\n                  </div>\n                </div>\n                <div className=\"col-sm-6\">\n                  <div className=\"form-group\">\n                    <label for=\"category\">Category</label>\n                    <input\n                      name=\"category\"\n                      type=\"text\"\n                      className=\"form-control\"\n                      placeholder=\"Category\"\n                      autoComplete=\"off\"\n                      value={this.state.cat_lang}\n                      onChange={e => this.onChange(e)}\n                    />\n                    {this.validator.message(\n                      \"Category\",\n                      this.state.cat_lang,\n                      \"required\"\n                    )}\n                  </div>\n                </div>\n              </div>\n              <MessageAlert\n                status={this.state.status}\n                successMessage={\n                  !_.isEmpty(this.state._id)\n                    ? \"Record has been updated.\"\n                    : \"Record has been created.\"\n                }\n                errorMessage=\"An error occured while performing operation.\"\n              />\n              <div className=\"form-footer pt-5 border-top\">\n                <button\n                  type=\"submit\"\n                  className=\"btn btn-primary btn-default\"\n                  onClick={this.onFormSubmit}\n                >\n                  {!_.isEmpty(this.state._id) ? \"Update\" : \"Create\"}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </Main>\n    );\n  }\n}\n\nCatEditor.contextType = AuthConsumer;\n","import React from \"react\";\nimport LiveChat from \"react-livechat\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport Main from \"../Main\";\nimport Iframe from \"react-iframe\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Fullscreen from \"react-full-screen\";\n\nexport default class Chat extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isFull: false\n    };\n  }\n\n  goFull = () => {\n    this.setState({ isFull: true });\n  };\n\n  render() {\n    return (\n      <Main>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                    <button\n                      onClick={this.goFull}\n                      className=\"btn btn-primary mb-3 float-right\"\n                    >\n                      <FontAwesomeIcon icon={\"desktop\"} /> Go Fullscreen\n                    </button>\n                    <Fullscreen\n                      enabled={this.state.isFull}\n                      onChange={isFull => this.setState({ isFull })}\n                    >\n                      <Iframe\n                        url=\"https://accounts.livechatinc.com/?client_id=bb9e5b2f1ab480e4a715977b7b1b4279&response_type=token&redirect_uri=https%3A%2F%2Fmy.livechatinc.com&state=%7B%22redirectTo%22%3A%22keep-on-chatting-with-customers%22%7D\"\n                        width={this.state.isFull ? \"100%\" : \"1000px\"}\n                        height={this.state.isFull ? \"100%\" : \"400px\"}\n                        id=\"myId\"\n                        display=\"initial\"\n                        position=\"relative\"\n                        allowFullScreen\n                      />\n                    </Fullscreen>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Main>\n    );\n  }\n}\n\nChat.contextType = AuthConsumer;\n//<iframe src=\"\" className=\"iframe-container col-lg-12\" />\n","import React from 'react'\nimport Main from '../Main'\nconst notFound = () => {\n    return(\n\t\t<Main>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\t\n          <div className=\"error-wrapper rounded border bg-white px-5\">\n\t\t\t\t<div className=\"row justify-content-center\">\n\t\t\t\t\t\t<div className=\"col-xl-4\">\n\t\t            \t\t\t\t<h1 className=\"text-primary bold error-title\">404</h1>\n\t\t\t\t\t\t\t\t\t<p className=\"pt-4 pb-5 error-subtitle\">Looks like something went wrong.</p>\n\t\t\t\t\t\t\t\t\t<a href=\"index.html\" className=\"btn btn-primary btn-pill\">Back to Home</a>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"col-xl-6 pt-5 pt-xl-0 text-center\">\n\t\t\t\t\t\t\t\t\t<img src=\"/assets/img/lightenning.png\" className=\"img-responsive\" alt=\"Error Page Image\"/>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n                </div>\n        </div>\n        </Main>\n    )\n}\n\nexport default notFound;","// PG7 services requests types codes START\nconst serviceRequestCodes = {\n    rental: {\n\ttitle: {\n\t    en: 'Rental service',\n\t    it: 'Servizio noleggio'\n\t},\n\tcode: 'RESE', // rental services code\n    },\n    side: {\n\ttitle: {\n\t    en: 'Additional service',\n\t    it: 'Servizio aggiuntivo'\n\t},\n\tcode: 'SISE', // side services code\n    },\n    maintenance: {\n\ttitle: {\n\t    en: 'Maintenance service',\n\t    it: 'Servizio manutenzione'\n\t},\n\tcode: 'MASE', // maintenance services code\n    }\n};\n// PG7 services requests types codes END\n\n// PG7 Control Room icons START\nconst statusIcons = {\n    NRE: { // new request code\n\ttype: 'plus-square',\n\tclass: 'text-primary'\n    },\n    WPR: { // waiting provider response code\n\ttype: 'angle-right',\n\tclass: 'text-success'\n    },\n    WCR: { // waiting customer response code\n\ttype: 'exchange-alt',\n\tclass: 'text-success'\n    },\n    APR: { // accepted by provider code\n\ttype: 'check',\n\tclass: 'text-success'\n    },\n    ACR: { // accepted by customer code\n\ttype: 'check-double',\n\tclass: 'text-success'\n    },\n    RPR: { // refused by provider code\n\ttype: 'exclamation-circle',\n\tclass: 'text-error'\n    },\n    RCR: { // refused by customer code\n\ttype: 'exclamation',\n\tclass: 'text-error'\n    },\n    EPA: { // payment error code\n\ttype: 'exclamation-triangle',\n\tclass: 'text-error'\n    },\n    CPA: { // completed payment code\n\ttype: 'circle-notch',\n\tclass: 'text-success'\n    },\n    PPA: { // pre-ordered service code\n\ttype: 'certificate',\n\tclass: 'text-primary'\n    },\n    VPA: { // verified payment code\n\ttype: 'check-square',\n\tclass: 'text-success'\n    },\n    CLR: { // closed request code\n\ttype: 'check-square',\n\tclass: 'text-warning'\n    }\n};\n// PG7 Control Room icons END\n\n// PG7 status codes START\nconst statusCodes = {\n    new: {\n\ttitle: {\n\t    en: 'New',\n\t    it: 'Nuovo'\n\t},\n\tdescription: {\n\t    en: 'New request',\n\t    it: 'Nuova richiesta'\n\t},\n\tcode: 'NRE' // new request code\n    },\n    waitingProvider: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Waiting for provider',\n\t    it: 'In attesa del fornitore'\n\t},\n\tcode: 'WPR', // waiting provider response code\n\tcommunication: {\n\t    autos: {\n\t\ttitle: {\n\t\t    en: 'Vehicole rental request',\n\t\t    it: 'Richiesta noleggio veicolo'\n\t\t},\n\t\tbody: {\n\t\t    en: 'Please confirm or deny the following request:',\n\t\t    it: 'Si prega di confermare o rifiutare la seguente richiesta:'\n\t\t}\n\t    },\n\t    services: {\n\t\ttitle: {\n\t\t    en: 'Service request',\n\t\t    it: 'Richiesta servizio'\n\t\t},\n\t\tbody: {\n\t\t    en: 'Please confirm or deny the following request:',\n\t\t    it: 'Si prega di confermare o rifiutare la seguente richiesta:'\n\t\t}\n\t    }\n\t} \n    },\n    waitingCustomer: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Waiting for customer',\n\t    it: 'In attesa del cliente'\n\t},\n\tcode: 'WCR' // waiting customer response code\n    },\n    acceptedProvider: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Accepted by provider',\n\t    it: 'Accettato dal fornitore'\n\t},\n\tcode: 'APR' // accepted by provider code\n    },\n    acceptedCustomer: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Accepted by customer',\n\t    it: 'Accettato dal cliente'\n\t},\n\tcode: 'ACR' // accepted by customer code\n    },\n    refusedProvider: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Refused by provider',\n\t    it: 'Rifiutato dal fornitore'\n\t},\n\tcode: 'RPR' // refused by provider code\n    },\n    refusedCustomer: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Refused by customer',\n\t    it: 'Rifiutato dal cliente'\n\t},\n\tcode: 'RCR' // refused by customer code\n    },\n    refusedPayment: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Rejected by payment system',\n\t    it: 'Rifiutato dal sistema di pagamento'\n\t},\n\tcode: 'RPA' // rejected payment code\n    },\n    errorPayment: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Error during payment',\n\t    it: 'Errore nel pagamento'\n\t},\n\tcode: 'EPA' // payment error code\n    },\n    payedBySystem: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Completed payment',\n\t    it: 'Pagamento completato'\n\t},\n\tcode: 'CPA' // completed payment code\n    },\n    preOrdered: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Payment included in order',\n\t    it: 'Pagamento incluso nella richiesta'\n\t},\n\tcode: 'PPA' // pre-ordered service code\n    },\n    verifiedPayment: {\n\ttitle: {\n\t    en: 'In progress',\n\t    it: 'In corso'\n\t},\n\tdescription: {\n\t    en: 'Payment verified',\n\t    it: 'Pagamento verificato'\n\t},\n\tcode: 'VPA' // verified payment code\n    },\n    closed: {\n\ttitle: {\n\t    en: 'Closed',\n\t    it: 'Chiuso'\n\t},\n\tdescription: {\n\t    en: 'Closed request',\n\t    it: 'Richiesta chiusa'\n\t},\n\tcode: 'CLR' // closed request code\n    }\n};\n// PG7 services requests types codes END\n\n// PG7 main status computer\nexport default function StatusComputer(){\n\n    this.init = () => {\n\t// define services, status codes and icons\n\tthis.serviceRequestCodes = serviceRequestCodes;\n\tthis.statusCodes = statusCodes;\n\tthis.statusIcons = statusIcons;\n    };\n\n    // get status obj from status code\n    this.getStatus = ( statusCode ) => {\n\tconst service = statusCode[ 2 ] + statusCode[ 5 ] + statusCode[ 8 ] + statusCode[ 11 ],\n\t      status = statusCode[ 13 ] + statusCode[ 15 ] + statusCode[ 17 ],\n\t      thisStatus = {\n\t\t  service: this.serviceRequestCodes[ this.getServiceFromCode( service ) ],\n\t\t  status: this.statusCodes[ this.getStatusFromCode( status ) ],\n\t\t  fieldID: statusCode.substring( 18 ),\n\t\t  icon: this.statusIcons[ status ]\n\t      };\n\treturn thisStatus;\n    };\n\n    // get service object from service code\n    this.getServiceFromCode = ( serviceCode ) => {\n\tlet serviceObj = null;\n\tfor ( let service in this.serviceRequestCodes ){\n\t    if ( this.serviceRequestCodes[ service ].code === serviceCode.trim().toUpperCase() ){\n\t\tserviceObj = service;\n\t    }\n\t}\n\treturn serviceObj;\n    };\n\n    // get status obj from status code\n    this.getStatusFromCode = ( statusCode ) => {\n\tlet statusObj = null;\n\tfor ( let status in this.statusCodes ){\n\t    if ( this.statusCodes[ status ].code === statusCode.trim().toUpperCase() ){\n\t\tstatusObj = status;\n\t    }\n\t}\n\treturn statusObj;\n    };\n    \n    // launch init on object instantiation\n    this.init();\n}\n","import React, { useState } from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport Modal from \"react-responsive-modal\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MessageAlert from \"../commons/MessageAlert\";\nimport ColumnVisibility from \"../grid/ColumnVisibility\";\nimport moment from 'moment';\nimport StatusComputer from \"../commons/StatusComputer\";\n\nlet statusGetter = new StatusComputer();\n\nexport default class RentalRequests extends React.Component {\n    constructor(props) {\n\tsuper(props);\n\tthis.state = {\n\t    openModal: false,\n\t    deleteRecordId: null,\n\t    category:null,\n\t    reqid:null,\n\t    status: undefined,\n\t    columns: [],\n\t    rows: []\n\t};\n    }\n\n    // get global language\n    getLang = () => {\n\treturn this.context._globalLang;\n    };\n    \n    componentDidMount() {\n\tif (_.isEmpty(this.state.rows)) {\n\t    this.getRentalData();\n\t}\n\tif (_.isEmpty(this.state.columns)) {\n\t    this.getColumns();\n\t}\n    }\n\n    onCloseModal = () => {\n\tthis.setState({\n\t    openModal: false,\n\t    deleteRecordId: null\n\t});\n    };\n\n    openModalConfirmation = data => {\n\tthis.setState({ \n\t    openModal: true, \n\t    deleteRecordId: data._id , \n\t    category:data.category,\n\t    reqid:data.reqid });\n    };\n\n    handleEditRow = data => {\n\tlocalStorage.removeItem(\"rentaData\");\n\tlocalStorage.setItem(\"rentalData\", JSON.stringify(data));\n\tthis.props.history.push({\n\t    pathname: \"/rentaleditor/\"\n\t});\n\t\n    };\n\n    // get status icon\n    getStatusIcon = statusCode => {\n\tconst thisStatus = statusGetter.getStatus( statusCode ),\n\t      statusStep = thisStatus.status,\n\t      statusIcon = thisStatus.icon,\n\t      iconData = {\n\t\t  title: statusStep.title[ this.getLang() ],\n\t\t  description: statusStep.description[ this.getLang() ],\n\t\t  icon: statusIcon.type, class: statusIcon.class\n\t      };\n\treturn this.printStatusIconEl( iconData );\n    };\n\n    // get jsx icon\n    printStatusIconEl = ( iconArgs ) => {\n\t/*\n\t   iconArgs = {\n\t   icon: FA icon name string\n\t   class: icon internal css class string \n\t   description: description string\n\t   title: title value string\n\t }\n\t */\n\treturn [\n\t\t<a title={ iconArgs.description }>\n\t\t<FontAwesomeIcon icon={ iconArgs.icon } className={ iconArgs.class } /> {' '} { iconArgs.title } { ' - ' } { iconArgs.description }\n\t    </a>\n\t];\n    }\n\n    resizeableColumns = column => {\n\tconsole.log(\"TCL: RentalRequests -> column\", column.key);\n\tconst defaultColumnProperties = {\n\t    resizable: true,\n\t    sortable: true\n\t    //width: 120\n\t};\n\n\treturn !_.isEmpty(column.name) ? defaultColumnProperties : null;\n    };\n\n    handleDeleteRow = () => {\n\tthis.setState({ openModal: false });\n\tconst _id = this.state.deleteRecordId;\n\tconst category = this.state.category;\n\tconst reqid = this.state.reqid;\n\tconst data = {_id,category,reqid};\n\t\n\taxios\n\t    .post(\"/api/rentalservices/d/\", data)\n\t    .then(res => {\n\n\t\tif (res.status === 204) {\n\t\t    let rows = this.state.rows.slice();\n\t\t    rows = rows.filter(row => row.reqid !== reqid);\n\t\t    \n\t\t    this.setState({\n\t\t\trows,\n\t\t\tstatus: 204\n\t\t    });\n\t\t}\n\t    })\n\t    .catch(err => {\n\t\tthis.setState({\n\t\t    status: 500\n\t\t});\n\t\tconsole.log(err);\n\t    });\n    };\n    \n\n    //sort rows \n\n    sortRows = (initialRows, sortColumn, sortDirection) => {\n\tconst comparer = (a, b) => {\n\t    if (sortDirection === \"ASC\") {\n\t\treturn a[sortColumn] > b[sortColumn] ? 1 : -1;\n\t    } else if (sortDirection === \"DESC\") {\n\t\treturn a[sortColumn] < b[sortColumn] ? 1 : -1;\n\t    }\n\t};\n\tconst rows =\n\t\t  sortDirection === \"NONE\" ? initialRows : this.state.rows.sort(comparer);\n\tthis.setState({rows});\n    };\n\n    setColumnVisibility = index => {\n\tconst columns = [...this.state.columns];\n\tconst toggleValue = columns[index].visible;\n\tcolumns[index].visible = !toggleValue;\n\tthis.setState({ columns });\n    };\n\n    getColumns = () => {\n\tconst columns = [\n\t    { key: \"_id\", visible: false, sortDescendingFirst: true },\n\t    { key: \"reqid\", visible: false },\n\t    { key: \"category\", name: \"Service Name\", visible: true },\n\t    { key: \"username\", name: \"Username\", visible: true },\n\t    { key: \"size\", name: \"Option\", visible: true },\n\t    { key: \"status\", name: \"Status\", visible: true },\n\t    { key: \"pickUpPlace\", name: \"Pick-up Place\", visible: false },\n\t    { key: \"returnPlace\", name: \"Return Place\", visible: false },\n\t    { key: \"pickUpDate\", name: \"Pick-up Date\", visible: true },\n\t    { key: \"returnDate\", name: \"Return Date\", visible: true },\n\t    { key: \"totalPieces\", name: \"Total Pieces\", visible: false },\n\t    { key: \"createdDate\", name: \"Creation Date\", visible: true },\n\t    { key: \"updatedDate\", name: \"Updated Date\", visible: true },\n\t    {\n\t\tkey: \"edit\",\n\t\tgetRowMetaData: row => row,\n\t\tformatter: ({ dependentValues }) => (\n\t\t\t<a\n\t\t    href=\"javascript:;\"\n\t\t    onClick={() => this.handleEditRow(dependentValues)}\n\t\t\t>\n\t\t\t<FontAwesomeIcon icon={\"pencil-alt\"} />\n\t\t\t</a>\n\t\t),\n\t\twidth: 35,\n\t\tvisible: true\n\t    },\n\t    {\n\t\tkey: \"delete\",\n\t\tgetRowMetaData: row => row,\n\t\tformatter: ({ dependentValues }) => (\n\t\t\t<a\n\t\t    href=\"javascript:;\"\n\t\t    onClick={() => this.openModalConfirmation(dependentValues)}\n\t\t\t>\n\t\t\t<FontAwesomeIcon icon={\"trash\"} className=\"text-danger\" />\n\t\t\t</a>\n\t\t),\n\t\twidth: 35,\n\t\tvisible: true\n\t    }\n\t].map(c => ({ ...c, ...this.resizeableColumns(c) }));\n\n\t//const cols = columns.filter(column => column.visible === true);\n\tthis.setState({ columns });\n    };\n\n    getRentalData = async () => {\n\tconst res = await axios.get(\"/api/rentalservices\");\n\tconst rentalData = res.data;\n\tconst rows = [];\n\tconsole.log(\"rentalDAta\", res.data);\n\trentalData.map(category => {\n\t    category.map((items, index) => {\n\t\tconst keys = Object.keys(items)[1];\n\t\tconst pid = items[Object.keys(items)[0]];\n\t\tif (items.Autos) {\n\t\t    items[keys].map(\n\t\t\t({\n\t\t\t    _id,\n\t\t\t    userinfo,\n\t\t\t    Size,\n\t\t\t    Status,\n\t\t\t    DataOraRitiro,\n\t\t\t    DataOraRiconsegna,\n\t\t\t    PostoRitiro,\n\t\t\t    PostoRiconsegna,\n\t\t\t    createdDate,\n\t\t\t    UpdatedDate\n\t\t\t}) => {\n\t\t\t    rows.push({\n\t\t\t\t_id: pid,\n\t\t\t\treqid: _id,\n\t\t\t\tusername: userinfo.Username,\n\t\t\t\tcategory: keys,\n\t\t\t\tsize: Size,\n\t\t\t\tstatus: this.getStatusIcon( Status ),\n\t\t\t\tpickUpDate: DataOraRitiro,\n\t\t\t\treturnDate: DataOraRiconsegna,\n\t\t\t\tpickUpPlace: PostoRitiro,\n\t\t\t\treturnPlace: PostoRiconsegna,\n\t\t\t\tcreatedDate:moment(createdDate).format('YYYY-MM-DD HH:mm:ss'),\n\t\t\t\tupdatedDate: UpdatedDate\n\t\t\t    });\n\t\t\t}\n\t\t    );\n\n\t\t} else {\n\t\t    const keys = Object.keys(items)[1];\n\t\t    const pid = items[Object.keys(items)[0]];\n\n\t\t    //Ironing.map(item => {console.log('itemsXX',item);});\n\n\t\t    items[keys].map(\n\t\t\t({\n\t\t\t    _id,\n\t\t\t    userinfo,\n\t\t\t    Status,\n\t\t\t    NumeroCapi,\n\t\t\t    DataOraRitiro,\n\t\t\t    DataOraRiconsegna,\n\t\t\t    createdDate,\n\t\t\t    UpdatedDate\n\t\t\t}) => {\n\t\t\t    rows.push({\n\t\t\t\t_id: pid,\n\t\t\t\treqid: _id,\n\t\t\t\tusername: userinfo.Username,\n\t\t\t\tstatus: this.getStatusIcon( Status ),\n\t\t\t\tcategory: keys,\n\t\t\t\ttotalPieces: NumeroCapi,\n\t\t\t\tpickUpDate: DataOraRitiro,\n\t\t\t\treturnDate: DataOraRiconsegna,\n\t\t\t\tcreatedDate:moment(createdDate).format('YYYY-MM-DD HH:mm:ss'),\n\t\t\t\tupdatedDate: UpdatedDate || \"\"\n\t\t\t    });\n\t\t\t}\n\t\t    );\n\t\t}\n\t    });\n\t});\n\n\tthis.setState({ rows });\n\tthis.sortRows(rows,'createdDate','DESC');\n\n    };\n\n    render() {\n\tconst { status, rows } = this.state;\n\n\t//const [rows, setRows] = this.state.rows;\n\n\t//!important function for hiding and displaying columns\n\tconst columns = this.state.columns.filter(\n\t    column => column.visible === true\n\t);\n\n\treturn (\n\t\t<Main>\n\t\t<div className=\"content-wrapper\">\n\t\t<div className=\"content\">\n\t\t<div className=\"row\">\n\t\t<div className=\"col-lg-12\">\n                <div className=\"card card-table-border-none\">\n                <div className=\"card-header card-header-border-bottom\">\n                <h2>\n                <span className=\"fa-layers fa-fw\">\n                <FontAwesomeIcon icon=\"wrench\" />\n                </span>\n                Service Requests\n            </h2>\n                </div>\n                <div className=\"card-body pt-0 pb-5\">\n                <div className=\"table card-table table-responsive table-responsive-large\">\n                <p className=\"mb-5\">\n                Use <code>.Menu Settings</code> to edit menu items.\n                </p>\n\n                <MessageAlert\n            status={status}\n            successMessage=\"Record has been deleted.\"\n            errorMessage=\"An error occured while performing operation.\"\n                />\n                <Modal\n            open={this.state.openModal}\n            onClose={this.onCloseModal}\n            center\n                >\n                <div className=\"modal-header\">Delete Record</div>\n                <div className=\"modal-body\">\n                Do you really want to delete this Record?\n                </div>\n                <div className=\"modal-footer\">\n                <button\n            type=\"button\"\n            className=\"btn btn-primary\"\n            data-dismiss=\"modal\"\n            onClick={this.onCloseModal}\n                >\n                Close\n            </button>\n                <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={this.handleDeleteRow}\n                >\n                Delete\n            </button>\n                </div>\n                </Modal>\n                <ColumnVisibility\n            columns={this.state.columns}\n            setColumnVisibility={this.setColumnVisibility}\n                />\n                <ReactDataGrid\n            className=\"table card-table table-responsive table-responsive-large\"\n            enableSingleRowSelect={true}\n            enableCellSelect={true}\n            columns={columns}\n            rowGetter={i => rows[i]}\n            rowsCount={rows.length}\n            onGridSort={(sortColumn, sortDirection) => {\n\t\tconsole.log('TCL: RentalRequests -> render -> sortDirection', sortDirection)\n\t\tconsole.log('TCL: RentalRequests -> render -> sortColumn', sortColumn)\n                this.sortRows(rows,sortColumn,sortDirection)\n            }\n                       }\n            enableCellSelect={true}\n            minHeight={500}\n                />\n                </div>\n                </div>\n                </div>\n\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t</div>\n\t\t</Main>\n\t);\n    }\n}\n\nRentalRequests.contextType = AuthConsumer;\n","import React from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MessageAlert from \"../commons/MessageAlert\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport _ from \"lodash\";\nimport 'flatpickr/dist/themes/material_green.css'\nimport Flatpickr from 'react-flatpickr'\nimport moment from 'moment';\n\n//const rentalData = JSON.parse(localStorage.getItem(\"rentalData\")) || {};\n\nexport default class AutoView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: undefined,\n      status: undefined,\n      pickUpPlace: undefined,\n      returnPlace: undefined,\n      pickUpDate: undefined,\n      returnDate: undefined,\n      messageStatus:undefined,\n    };\n    this.validator = new SimpleReactValidator();\n\n  }\n\n  componentWillMount() {\n    const {rentalData} = this.props;\n    this.setStatus(rentalData);\n  }\n\n  setStatus = rentalData => {\n\t\trentalData.status[0].props.children.map(item => {\n      if (!_.isObject(item) && !_.isEmpty(item)) {\n        this.setState({ status: item });\n      }\n      const {\n        size,\n        pickUpPlace,\n        returnPlace,\n        pickUpDate,\n        returnDate\n      } = rentalData;\n\n      this.setState({\n        size,\n        pickUpPlace,\n        returnPlace,\n        pickUpDate:moment(pickUpDate,'DD/MM/YYYY HH:mm'),\n        returnDate:moment(returnDate,'DD/MM/YYYY HH:mm')\n      });\n\n    });\n\n    \n\n  };\n\n  handleSubmit = e => {\n\n    if (this.validator.allValid()) {\n\n    const {rentalData} = this.props;\n\n    const {\n      size,\n      status,\n      pickUpPlace,\n      returnPlace,\n      pickUpDate,\n      returnDate\n    } = this.state;\n\n    console.log(status);\n\n    const data = {\n      _id: rentalData._id,\n      reqid: rentalData.reqid,\n      category:rentalData.category,\n      size,\n      status,\n      pickUpPlace,\n      returnPlace,\n      pickUpDate,\n      returnDate\n    };\n    \n    \n\n    axios\n      .post(\"/api/rentalservices/u\", data)\n      .then(res => {\n        if (res.status === 204) {\n          this.setState({messageStatus:204})\n        }\n      })\n      .catch(err => {\n        console.log(\"TCL: AutoView -> handleSubmit -> err\", err);\n      });\n    } else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n    e.preventDefault();\n  };\n\n  render() {\n\n    const {rentalData} = this.props;\n    return (\n      <div className=\"card card-default\">\n        <div className=\"card-header card-header-border-bottom\">\n          <h2>\n            <span className=\"fa-layers fa-fw\">\n              <FontAwesomeIcon icon=\"pencil-alt\" />\n            </span>\n            Edit Request\n          </h2>\n        </div>\n        <div className=\"card-body\">\n          <form>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"ID\">ID</label>\n                  <input\n                    name=\"ID\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={rentalData._id}\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"UserID\">Username</label>\n                  <input\n                    name=\"UserID\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    autoComplete=\"off\"\n                    value={rentalData.username}\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"url\">Service Name</label>\n                  <input\n                    name=\"ServiceName\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={rentalData.category}\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"icon\">Option</label>\n                  <select\n                    class=\"form-control\"\n                    id=\"status\"\n                    defaultValue={this.state.size}\n                    onChange={e => {\n                      this.setState({ size: e.currentTarget.value });\n                    }}\n                  >\n                    <option value=\"Small\">Small</option>\n                    <option value=\"Medium\">Medium</option>\n                    <option value=\"Station Wagon\">Station Wagon</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"status\">Status</label>\n                  <select\n                    class=\"form-control\"\n                    defaultValue={this.state.status}\n                    onChange={e => {\n                      this.setState({ status: e.currentTarget.value });\n                    }}\n                  >\n                    <option value=\"New\">New</option>\n                    <option value=\"Open\">Open</option>\n                    <option value=\"InProgress\">InProgress</option>\n                    <option value=\"Closed\">Closed</option>\n                    <option value=\"Refused\">Refused</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"sortid\">Pick-up Place</label>\n                  <input\n                    name=\"PickupPlace\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Pick Up Place\"\n                    value={this.state.pickUpPlace}\n                    onChange={e => {\n                      this.setState({ pickUpPlace: e.currentTarget.value });\n                    }}\n                  />\n                  {this.validator.message(\"Pick up Place\",this.state.pickUpPlace,\"required\")}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"sortid\">Return Place</label>\n                  <input\n                    id=\"ReturnPlace\"\n                    name=\"ReturnPlace\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Return Place\"\n                    value={this.state.returnPlace}\n                    onChange={e => {\n                      this.setState({ returnPlace: e.currentTarget.value });\n                    }}\n                  />\n                   {this.validator.message(\"ReturnPlace\",this.state.returnPlace,\"required\")}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"PickUpDate\">Pick-up Date</label>\n                  <Flatpickr data-enable-time\n                    options= {{dateFormat:\"d/m/Y H:i\",time_24hr:true}}\n                    onChange = {e => {this.setState({ pickUpDate: moment(e[0])})}}\n                    value={moment(this.state.pickUpDate,'DD/MM/YYYY HH:mm').format('DD/MM/YYYY HH:mm')}\n                    className = \"form-control\"\n                  />\n                  {this.validator.message(\"pickUpDate\",this.state.pickUpDate,\"required|date\")}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"PickUpDate\">Return Date</label>\n                  <Flatpickr data-enable-time\n                    options= {{dateFormat:\"d/m/Y H:i\",time_24hr:true,minDate:moment(this.state.pickUpDate,'DD/MM/YYYY HH:mm').format('DD/MM/YYYY HH:mm')}}\n                    onChange = {e => {this.setState({ returnDate: moment(e[0])})}}\n                    value={moment(this.state.returnDate,'DD/MM/YYYY HH:mm').format('DD/MM/YYYY HH:mm')}\n                    className = \"form-control\"\n                  />\n                  {this.validator.message(\"Return Date\",this.state.pickUpDate,\"required|date\")}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"PickUpDate\">Updated Date</label>\n                  <input\n                    id=\"updatedDate\"\n                    name=\"updateDate\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={rentalData.updatedDate}\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n            \n            <MessageAlert status={this.state.messageStatus} successMessage={\"Record has been updated\"} errorMessage=\"An error occured while performing operation.\"/> \n\n            <div className=\"form-footer pt-5 border-top\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-default\"\n                onClick={this.handleSubmit}\n              >\n                Update\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n{/*\n                    selected={this.state.returnDate}\n                    onChange={e => {\n                      this.setState({ pickUpDate: moment(e.currentTarget.value).format('DD/MM/YYYY HH:mm')});\n                    }}*/}","import React from \"react\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MessageAlert from \"../commons/MessageAlert\";\nimport _ from \"lodash\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport Flatpickr from 'react-flatpickr'\nimport moment from 'moment';\n\n\n\nexport default class CommonView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        update:false,\n        status:undefined,\n        pickUpDate: undefined,\n        returnDate: undefined,\n        totalPieces:undefined\n\n    }\n\n    this.validator = new SimpleReactValidator();\n  }\n\n  componentWillMount(){\n    const {rentalData} = this.props;\n    this.setStatus(rentalData);\n  }\n\n  setStatus = rentalData => {\n\n    const {\n      status,\n      totalPieces,\n      pickUpDate,\n      returnDate\n    } = rentalData;\n\n\n    \n\n\t\tstatus[0].props.children.map(item => {\n      if (!_.isObject(item) && !_.isEmpty(item)) {\n        this.setState({ status: item,totalPieces,\n        pickUpDate:moment(pickUpDate,'DD/MM/YYYY HH:mm'),\n        returnDate:moment(returnDate,'DD/MM/YYYY HH:mm') });\n      }\n   });\n };\n\n handleSubmit = (e) =>\n {\n  \n  if (this.validator.allValid()) {\n\n   const {\n     category,\n     reqid,\n     _id\n   } = this.props.rentalData;\n  \n  \n    const { \n      status,\n      pickUpDate,\n      returnDate,\n      totalPieces\n    } = this.state;\n     \n\n\n    const data = {\n      _id,\n      reqid,\n      category,\n      status,\n      pickUpDate,\n      returnDate,\n      totalPieces\n    }\n\n    axios\n      .post(\"/api/rentalservices/u\", data)\n      .then(res => {\n        if (res.status === 204) {\n          this.setState({messageStatus:204})\n        }\n      })\n      .catch(err => {\n        console.log(\"TCL: AutoView -> handleSubmit -> err\", err);\n      });\n     \n     this.setState({update:204})\n    }\n    else {\n      this.validator.showMessages();\n      this.forceUpdate();\n    }\n     e.preventDefault();\n\n }\n\n  render() {\n\n    const {rentalData} = this.props;\n\n    \n    return (\n      <div className=\"card card-default\">\n        <div className=\"card-header card-header-border-bottom\">\n          <h2>\n            <span className=\"fa-layers fa-fw\">\n              <FontAwesomeIcon icon=\"pencil-alt\" />\n            </span>\n            Edit Request\n          </h2>\n        </div>\n        <div className=\"card-body\">\n          <form>\n            <div className=\"row\">\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"ID\">ID</label>\n                  <input\n                    name=\"ID\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={rentalData._id}\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"UserID\">Username</label>\n                  <input\n                    name=\"UserID\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    autoComplete=\"off\"\n                    value={rentalData.username}\n                    disabled\n                  />\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"url\">Service Name</label>\n                  <input\n                    name=\"ServiceName\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={rentalData.category}\n                    disabled\n                  />\n                </div>\n              </div>\n              \n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"status\">Status</label>\n                  <select\n                    class=\"form-control\"\n                    onChange={e => {\n                      this.setState({ status: e.currentTarget.value });\n                    }}\n                  >\n                    <option value=\"New\">New</option>\n                    <option value=\"Open\">Open</option>\n                    <option value=\"InProgress\">InProgress</option>\n                    <option value=\"Closed\">Closed</option>\n                    <option value=\"Refused\">Refused</option>\n                  </select>\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"sortid\">Total Pieces</label>\n                  <input\n                    name=\"totalPieces\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    placeholder=\"Total Pieces\"\n                    value={this.state.totalPieces}\n                    onChange={e => {\n                      this.setState({ totalPieces: e.currentTarget.value });\n                    }}\n                  />\n                  {this.validator.message(\"total pieces\",this.state.totalPieces,\"required|numeric\")}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"PickUpDate\">Pick-up Date</label>\n                  <Flatpickr data-enable-time\n                    options= {{dateFormat:\"d/m/Y H:i\",time_24hr:true}}\n                    onChange = {e => {this.setState({ pickUpDate: moment(e[0])})}}\n                    value={moment(this.state.pickUpDate,'DD/MM/YYYY HH:mm').format('DD/MM/YYYY HH:mm')}\n                    className = \"form-control\"\n                  />\n                  {this.validator.message(\"pickUpDate\",this.state.pickUpDate,\"required|date\")}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"PickUpDate\">Return Date</label>\n                  <Flatpickr data-enable-time\n                    options= {{dateFormat:\"d/m/Y H:i\",time_24hr:true,minDate:moment(this.state.pickUpDate,'DD/MM/YYYY HH:mm').format('DD/MM/YYYY HH:mm')}}\n                    onChange = {e => {this.setState({ returnDate: moment(e[0])})}}\n                    value={moment(this.state.returnDate,'DD/MM/YYYY HH:mm').format('DD/MM/YYYY HH:mm')}\n                    className = \"form-control\"\n                  />\n                  {this.validator.message(\"Return Date\",this.state.pickUpDate,\"required|date\")}\n                </div>\n              </div>\n              <div className=\"col-sm-6\">\n                <div className=\"form-group\">\n                  <label for=\"updatedDate\">Updated Date</label>\n                  <input\n                    name=\"updatedDate\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={rentalData.updatedDate}\n                    disabled\n                  />\n                </div>\n              </div>\n            </div>\n\n            <MessageAlert status={this.state.update} successMessage={\"Record has been updated\"} errorMessage=\"An error occured while performing operation.\"/> \n\n            <div className=\"form-footer pt-5 border-top\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-primary btn-default\"\n                onClick={this.handleSubmit}\n              >\n                Update\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport SimpleReactValidator from \"simple-react-validator\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport AutoView from './AutosView';\nimport CommonView from './CommonView';\nimport _ from 'lodash';\n\n\nexport default class RentalEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      rentalData : undefined\n    }\n    this.validator = new SimpleReactValidator();\n\n  }\n\ncomponentDidMount(){\n  const rentalData = JSON.parse(localStorage.getItem('rentalData'));\n  this.setState({rentalData});\n}\n \n  onFormSubmit = e => {};\n\n  render() {\n\n\n    const {rentalData} = this.state;\n\n    if (_.isEmpty(rentalData))\n      return (\n        <Main>\n          <div className=\"card card-default\">\n            <div className=\"card-header card-header-border-bottom\" />\n            <p>No data to show</p>\n          </div>\n        </Main>\n      );\n    else if(rentalData.category === \"Autos\"){\n      return (\n        <Main>\n            <AutoView rentalData={rentalData}/>\n        </Main>\n      );\n    }\n    else {\n      return(\n        <Main>\n            <CommonView rentalData={rentalData}/>\n        </Main>\n      )\n    }\n  }\n}\n\nRentalEditor.contextType = AuthConsumer;\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { AuthConsumer } from './AuthContext'\n\n\nconst PrivateRoute = ({ component: Component, ...rest }) => (\n  <AuthConsumer>\n      {({ _isAuth }) => (\n      <Route\n        render={props =>\n          _isAuth ? <Component {...props} /> : <Redirect to=\"/\" />\n        }\n        {...rest}\n      />\n    )}\n  </AuthConsumer>\n)\n\nexport default PrivateRoute\n\n/*\n({isAuth}) => (\n  <Route {...rest} render={(props) => (\n      isAuth === true ? <Component {...props} /> : <Redirect to='/login' />\n  )} />\n) */   ","import React,{useState,useEffect} from \"react\";\nimport Modal from \"react-responsive-modal\";\nimport { EditorState,convertToRaw, ContentState } from 'draft-js';\nimport { Editor } from 'react-draft-wysiwyg';\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\nimport draftToHtml from 'draftjs-to-html';\nimport _ from 'lodash';\nimport htmlToDraft from 'html-to-draftjs';\nimport axios from 'axios';\n\n\nconst onSubmitHandler = (titleState,editorState,rowData) => {\n  const {_id} = rowData; \n  const content = draftToHtml(convertToRaw(editorState.getCurrentContent()));\n  const data = {_id,title:titleState,content}\n  axios.post('/api/infopages/u',data)\n\n}\n\n\nconst ContentModal = props => {\n  const { openModal, onCloseModal,rowData } = props;\n  \n  const [titleState,setTitleState] = useState(undefined);\n  const [editorState,setEditorState] = useState(EditorState.createEmpty);\n  const [editorIntialized,setEditorInitialized] = useState(false);\n\n\n  useEffect(()=>{\n    if(_.isObject(rowData) && !editorIntialized){\n      const editorIntialized = true;\n      const {title,content} = rowData;\n      const blocksFromHtml = htmlToDraft(content);\n      const { contentBlocks, entityMap } = blocksFromHtml;\n      const contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n      const editorState = EditorState.createWithContent(contentState);\n\n      setTitleState(title);\n      setEditorState(editorState);\n      setEditorInitialized(editorIntialized);\n    }\n  })\n\n\n\n\n\n\n  return (\n    <Modal\n      open={openModal}\n      onClose={() => {\n        onCloseModal();\n      }}\n      center\n    >\n      <div className=\"modal-header\">Edit Content</div>\n      <div className=\"modal-body\">\n        saving the content will reflect changes on mobile app.\n      </div>\n      \n      <div className=\"card-body\">\n        <form>\n          <div className=\"row\">\n            <div className=\"col-sm-12\">\n              <div className=\"form-group\">\n                <label for=\"id\">Title</label>\n                <input\n                  name=\"id\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={titleState}\n                  placeholder=\"Title\"\n                  onChange = {(e) => setTitleState(e.currentTarget.value)}\n                />\n              </div>\n            </div>\n            <div className=\"col-sm-12\">\n              <div className=\"form-group\">\n                <label for=\"category\">Content</label>\n                <Editor\n                  editorState={editorState}\n                  toolbarClassName=\"toolbarClassName\"\n                  wrapperClassName=\"wrapperClassName\"\n                  editorClassName=\"editorClassName\"\n                  onEditorStateChange={(editorState) => {setEditorState(editorState)}}\n                  maxHeight = {100}\n                />\n              </div>\n            </div>\n          </div>\n        </form>\n      </div>\n\n      <div className=\"modal-footer\">\n        <button\n          type=\"button\"\n          className=\"btn btn-success\"\n          data-dismiss=\"modal\"\n          onClick={() => {\n            onSubmitHandler(titleState,editorState,rowData);\n          }}\n        >\n          Save\n        </button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default ContentModal;\n","import React from \"react\";\nimport Main from \"../Main\";\nimport axios from \"axios\";\nimport _ from \"lodash\";\nimport ReactDataGrid from \"react-data-grid\";\nimport { AuthConsumer } from \"../../AuthContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport MessageAlert from \"../commons/MessageAlert\";\nimport ColumnVisibility from \"../grid/ColumnVisibility\";\nimport ContentModal from \"./ContentModal\";\n\n// ESTH maintenance services\nexport default class ContentEditor extends React.Component {\n  // main constructor\n  constructor(props) {\n    super(props);\n    this.state = {\n      menuItems: null,\n      status: undefined,\n      openModal: false,\n      rows: [],\n      columns: [],\n      rowData:undefined\n    };\n  }\n\n  // react after mounting\n  componentDidMount() {\n    this.getColumns();  \n    this.getData();\n      \n  }\n\n  \n\n  getData = async () => {\n    const { data } = await axios.get(\"/api/infopages\");\n    const rows = [...this.state.rows];\n    const ln = this.context._globalLang || 'en';\n    console.log(\"TCL: ContentEditor -> getData -> ln\", ln)\n    const ids = [],\n      keys = [];\n\n    Object.keys(data).forEach(outerIndex =>\n      Object.keys(data[outerIndex]).forEach(key => {\n        if (key === \"_id\") ids.push(data[outerIndex][key]);\n        else keys.push(key);\n      })\n    );\n\n    for (let i in data) {\n      const { title, content, createdDate, updatedDate } = data[i][keys[i]];\n      rows.push({\n        _id: ids[i],\n        title: title[ln],\n        content: content[ln],\n        createdDate,\n        updatedDate\n      });\n    }\n\n    this.setState({rows})\n    \n  };\n\n  //on content modal open\n\n  openContentModal = (data) => {\n    this.setState({\n      openModal: true,\n      rowData:data\n    });\n    \n  };\n\n  //on close modal\n  onCloseModal = () => {\n    this.setState({\n      openModal: false\n    });\n  };\n\n  // handle row editing\n  handleEditRow = data => {\n    this.openContentModal(data);\n  };\n\n  // get maintenance services columns\n  getColumns() {\n    const columns = [\n      { key: \"id\", visible: false },\n      { key: \"title\", name: \"Title Page\", visible: true },\n      { key: \"content\", name: \"Content\", visible: true },\n      { key: \"createdDate\", name: \"Created Date\", visible: true },\n      { key: \"updatedDate\", name: \"Updated Date\", visible: true },\n      {\n        key: \"edit\",\n        getRowMetaData: row => row,\n        formatter: ({ dependentValues }) => (\n          <a\n            href=\"javascript:;\"\n            onClick={() => this.handleEditRow(dependentValues)}\n          >\n            <FontAwesomeIcon icon={\"pencil-alt\"} />\n          </a>\n        ),\n        width: 35,\n        visible: true\n      }\n    ];\n    // set columns in state\n    this.setState({ columns });\n  }\n\n  // set column visibility\n  setColumnVisibility = index => {\n    const columns = [...this.state.columns];\n    const toggleValue = columns[index].visible;\n    columns[index].visible = !toggleValue;\n    this.setState({ columns });\n  };\n\n \n\n  // react rendering\n  render() {\n    const { rows, status, openModal,rowData } = this.state;\n    console.log(\"TCL: ContentEditor -> render -> rowData\", rowData)\n    const columns = this.state.columns.filter(\n      column => column.visible === true\n    );\n    return (\n      <Main>\n        <div className=\"content-wrapper\">\n          <div className=\"content\">\n            <div className=\"row\">\n              <div className=\"col-lg-12\">\n                <div className=\"card card-table-border-none\">\n                  <div className=\"card-header card-header-border-bottom\">\n                    <h2>\n                      <span className=\"fa-layers fa-fw\">\n                        <FontAwesomeIcon icon=\"pencil-alt\" />\n                      </span>\n                      App Content Editor\n                    </h2>\n                  </div>\n                  <div class=\"card card-default\">\n                    <div class=\"card-body\">\n                      <ul\n                        class=\"nav nav-pills mb-3\"\n                        id=\"pills-tab\"\n                        role=\"tablist\"\n                      >\n                        <li class=\"nav-item\">\n                          <a\n                            class=\"nav-link active show\"\n                            id=\"ipills-home-tab\"\n                            data-toggle=\"pill\"\n                            href=\"#ipills-home\"\n                            role=\"tab\"\n                            aria-controls=\"ipills-home\"\n                            aria-selected=\"false\"\n                          >\n                            <i class=\"mdi mdi-star mr-1\" /> Info Pages\n                          </a>\n                        </li>\n                        <li class=\"nav-item\">\n                          <a\n                            class=\"nav-link\"\n                            id=\"ipills-profile-tab\"\n                            data-toggle=\"pill\"\n                            href=\"#ipills-profile\"\n                            role=\"tab\"\n                            aria-controls=\"ipills-profile\"\n                            aria-selected=\"true\"\n                          >\n                            <i class=\"mdi mdi-account mr-1\" /> App Screens\n                          </a>\n                        </li>\n                      </ul>\n                      <div class=\"tab-content\" id=\"pills-tabContent\">\n                        <div\n                          class=\"tab-pane fade active show\"\n                          id=\"ipills-home\"\n                          role=\"tabpanel\"\n                          aria-labelledby=\"ipills-home-tab\"\n                        >\n                          <div className=\"table card-table table-responsive table-responsive-large\">\n                            <ContentModal\n                              openModal={openModal}\n                              onCloseModal={this.onCloseModal}\n                              rowData = {rowData}\n                            />\n                            <MessageAlert\n                              status={status}\n                              successMessage=\"Record has been deleted.\"\n                              errorMessage=\"An error occured while performing operation.\"\n                            />\n\n                            <ColumnVisibility\n                              columns={this.state.columns}\n                              setColumnVisibility={this.setColumnVisibility}\n                            />\n                            <ReactDataGrid\n                              className=\"table card-table table-responsive table-responsive-large\"\n                              enableSingleRowSelect={true}\n                              enableCellSelect={true}\n                              columns={columns}\n                              rowGetter={i => rows[i]}\n                              rowsCount={rows.length}\n                              enableCellSelect={true}\n                              minHeight={500}\n                            />\n                          </div>\n                        </div>\n                        <div\n                          class=\"tab-pane fade\"\n                          id=\"ipills-profile\"\n                          role=\"tabpanel\"\n                          aria-labelledby=\"ipills-profile-tab\"\n                        >\n                          Lorem ipsum dolor sit amet consectetur adipisicing\n                          elit sed do eiusmod tempor incididunt ut labore et\n                          dolore magna aliqua. Ut enim ad minim veniam quis\n                          nostrud exercitation ullamco laboris nisi ut aliquip\n                          ex ea commodo consequat. Duis aute irure dolor in\n                          reprehenderit in voluptate velit esse cillum dolore eu\n                          fugiat nulla pariatur.\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </Main>\n    );\n  }\n}\n\nContentEditor.contextType = AuthConsumer;\n","import React from 'react';\nimport Login from './components/Login';\nimport Main from './components/Main';\nimport MenuEditor from './components/menu/MenuEditor';\nimport MenuDetail from './components/menu/MenuDetail';\nimport SServiceEditor from './components/sideservices/SServiceEditor';\nimport SServices from './components/sideservices/SServiceDetails';\nimport MServices from './components/maintenance/MaintenanceServices';\nimport CatDetails from './components/sideservices/CatDetails';\nimport CatEditor from './components/sideservices/CatEditor';\nimport Chat from './components/chat/Chat'; \nimport NotFound from './components/commons/NotFound';\nimport RentalRequests from './components/rentalservices/RentalRequests';\nimport RentalEditor from './components/rentalservices/RentalEditor';\nimport {BrowserRouter,Switch,Route} from 'react-browser-router';\nimport PrivateRoute from './PrivateRoute';\nimport CommonView from './components/rentalservices/CommonView';\nimport ContentEditor from './components/content/ContentEditor';\nexport default class Routes extends React.Component{\n\n  constructor(props){\n   super(props);\n  }\n\n\n\nrender() {\n  return(\n      <BrowserRouter>\n          <Switch>            \n            <Route path=\"/login\" component={Login}/>\n            <Route path='/content' component={ContentEditor}/>\n            <Route path='/chat' component={Chat}/>\n            <Route path='/rentalrequests' component={RentalRequests}/>\n            <Route path = '/commonview' component={CommonView}/>\n            <Route path='/rentaleditor/' component={RentalEditor}/>\n            <PrivateRoute path='/dashboard' component={Main} />\n            <Route path='/servicecatergory' component={CatDetails}/>\n            <Route path='/service' component={SServices}/>\n            <Route path= '/sserviceeditor/:pid/:cid' component = {SServiceEditor}/>\n            <Route path= '/sserviceeditor/' component = {SServiceEditor}/>\n\t          <Route path= '/maintenance' component={ MServices } />\n            <Route path='/cateditor/:id' component={CatEditor}/>\n            <Route path='/cateditor/' component={CatEditor}/>\n            <Route path='/menusettings' component={MenuDetail}/>\n            <Route path=\"/menueditor/:id\" component={MenuEditor}/>\n            <Route path=\"/\" exact component={Login}/>\n            <Route component={NotFound}/>\n          </Switch>\n        </BrowserRouter>\n      )}\n}\n     \n","\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport {fas} from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(fas)","import React, { Component } from 'react';\nimport {AuthProvider} from './AuthContext';\nimport Routes from './routes';\n\n//statics \nimport './fontawesome'\n\n\n\nclass App extends Component {\n\n  render() {\n    return (\n      <AuthProvider>\n        <Routes/>\n      </AuthProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n//console.log(awsConfig);\n//Amplify.configure({})\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}